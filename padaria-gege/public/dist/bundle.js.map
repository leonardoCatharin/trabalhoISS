{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","public/app.js","bundle.js","public/app/cliente/module.js","public/app/encomenda/module.js","public/app/entrega/module.js","public/app/funcionario/module.js","public/app/login/module.js","public/app/ordemproducao/module.js","public/app/pedidocompra/module.js","public/app/produto/module.js","public/app/relatorio/module.js","public/app/usuario/module.js","public/app/venda/module.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","angular","config","$stateProvider","$urlRouterProvider","$httpProvider","otherwise","state","url","templateUrl","interceptors","push","$q","$injector","$window","request","headers","sessionStorage","response","responseError","rejection","status","get","go","reject","./app/cliente/module","./app/encomenda/module","./app/entrega/module","./app/funcionario/module","./app/login/module","./app/ordemproducao/module","./app/pedidocompra/module","./app/produto/module","./app/relatorio/module","./app/usuario/module","./app/venda/module",2,"controller","$scope","seed","$state","clientes","remover","index","splice","alterar","id","opts",3,"resolve","entity","EncomendaService","$stateParams","getById","then","data","getDados","encomendas","remove","ProdutoService","errorResponse","console","log","produtos","save","horaEntrega","dataEntrega","_id","dataSolicitacao","Date","update","searchProduct","param","getByName","add","obj","copy","produto","arrStatus","service","$http","window","location","origin","this","page","size","post","put",4,5,"funcionarios","entrada","alert","getHours","getMinutes","login","senha",6,"LoginService","doLogout","doLogin","user","setItem","token","removeItem",7,"ordemProducaoService","ordensProducao","itemProducaoLista","dataPrazo","tipoOrdem",8,"pedidoCompraService","pedidoCompras","itensPedido","dataVencimento","itemPedidoCompra",9,"type","lowestQuantity","value","name","supplier","description","actualQuantity","getId","getMissing","params","val","list","missingList","saveOrUpdate","promise","undefined","valores","nome","tipo","valor","qntdMin",10,"options","select","isAble","inicio","fim",11,"UsuarioService","usuarios","resolveSaveUpdate","tipos",12,"$modal","sales","getPrecos","v","vendas","reduce","prev","next","number","product","open","modalInstance","animation","backdrop","result","$modalInstance","products","addedProducts","sale","item","close","_boolean","cliente","dismiss"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n  require('./app/login/module');\n  require('./app/produto/module');\n  require('./app/cliente/module');\n  require('./app/funcionario/module');\n  require('./app/venda/module');\n  require('./app/pedidocompra/module');\n  require('./app/ordemproducao/module');\n  require('./app/relatorio/module');\n  require('./app/entrega/module');\n  require('./app/encomenda/module');\n  require('./app/usuario/module');\n\nangular.module('myApp', [\n    'ui.router'\n    , 'ui.utils.masks'\n    , 'app.login'\n    , 'app.produto'\n    , 'app.cliente'\n    , 'app.funcionario'\n    , 'app.venda'\n    , 'app.pedidoCompra'\n    , 'app.ordemProducao'\n    , 'app.relatorio'\n    , 'app.entrega'\n    , 'app.encomenda'\n    , 'app.usuario'\n\n]).config(['$stateProvider', '$urlRouterProvider','$httpProvider',($stateProvider, $urlRouterProvider, $httpProvider) => {\n    $urlRouterProvider.otherwise(\"/login\");\n    $stateProvider\n        .state('produto', {\n            url: \"/produto\"\n            ,templateUrl:'base.html'\n        })\n        .state('home', {\n            url: \"/home\"\n            ,templateUrl:'base.html'\n        })\n        .state('cliente', {\n            url: \"/cliente\"\n            ,templateUrl:'base.html'\n        })\n        .state('funcionario', {\n            url: \"/funcionario\"\n            ,templateUrl:'base.html'\n        })\n        .state('venda', {\n            url: \"/venda\"\n            ,templateUrl:'base.html'\n        })\n        .state('pedidoCompra', {\n            url: \"/pedidoCompra\"\n            ,templateUrl:'base.html'\n        })\n        .state('ordemProducao', {\n            url: \"/ordemproducao\"\n            ,templateUrl:'base.html'\n        })\n        .state('relatorio', {\n            url: \"/relatorio\"\n            ,templateUrl:'base.html'\n        })\n        .state('entrega', {\n            url: \"/entrega\"\n            ,templateUrl:'base.html'\n        })\n        .state('encomenda', {\n            url: \"/encomenda\"\n            ,templateUrl:'base.html'\n        })\n        .state('usuario', {\n            url: \"/usuario\"\n            ,templateUrl:'base.html'\n        });\n\n    $httpProvider.interceptors.push(['$q', '$injector', '$window',($q, $injector, $window) => {\n        return {\n            'request': function (config) {\n                config.headers['token'] = $window.sessionStorage['token'];\n                return config;\n            },\n            'response': function (config) {\n                return config;\n            },\n            'responseError': function (rejection) {\n                if (rejection.status === 403) {\n                    var state = $injector.get('$state');\n                    state.go('login.log');\n                }\n                return $q.reject(rejection);\n            }\n        };\n    }])\n\n}]);","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nrequire('./app/login/module');\nrequire('./app/produto/module');\nrequire('./app/cliente/module');\nrequire('./app/funcionario/module');\nrequire('./app/venda/module');\nrequire('./app/pedidocompra/module');\nrequire('./app/ordemproducao/module');\nrequire('./app/relatorio/module');\nrequire('./app/entrega/module');\nrequire('./app/encomenda/module');\nrequire('./app/usuario/module');\n\nangular.module('myApp', ['ui.router', 'ui.utils.masks', 'app.login', 'app.produto', 'app.cliente', 'app.funcionario', 'app.venda', 'app.pedidoCompra', 'app.ordemProducao', 'app.relatorio', 'app.entrega', 'app.encomenda', 'app.usuario']).config(['$stateProvider', '$urlRouterProvider', '$httpProvider', function ($stateProvider, $urlRouterProvider, $httpProvider) {\n    $urlRouterProvider.otherwise(\"/login\");\n    $stateProvider.state('produto', {\n        url: \"/produto\",\n        templateUrl: 'base.html'\n    }).state('home', {\n        url: \"/home\",\n        templateUrl: 'base.html'\n    }).state('cliente', {\n        url: \"/cliente\",\n        templateUrl: 'base.html'\n    }).state('funcionario', {\n        url: \"/funcionario\",\n        templateUrl: 'base.html'\n    }).state('venda', {\n        url: \"/venda\",\n        templateUrl: 'base.html'\n    }).state('pedidoCompra', {\n        url: \"/pedidoCompra\",\n        templateUrl: 'base.html'\n    }).state('ordemProducao', {\n        url: \"/ordemproducao\",\n        templateUrl: 'base.html'\n    }).state('relatorio', {\n        url: \"/relatorio\",\n        templateUrl: 'base.html'\n    }).state('entrega', {\n        url: \"/entrega\",\n        templateUrl: 'base.html'\n    }).state('encomenda', {\n        url: \"/encomenda\",\n        templateUrl: 'base.html'\n    }).state('usuario', {\n        url: \"/usuario\",\n        templateUrl: 'base.html'\n    });\n\n    $httpProvider.interceptors.push(['$q', '$injector', '$window', function ($q, $injector, $window) {\n        return {\n            'request': function request(config) {\n                config.headers['token'] = $window.sessionStorage['token'];\n                return config;\n            },\n            'response': function response(config) {\n                return config;\n            },\n            'responseError': function responseError(rejection) {\n                if (rejection.status === 403) {\n                    var state = $injector.get('$state');\n                    state.go('login.log');\n                }\n                return $q.reject(rejection);\n            }\n        };\n    }]);\n}]);\n\n},{\"./app/cliente/module\":2,\"./app/encomenda/module\":3,\"./app/entrega/module\":4,\"./app/funcionario/module\":5,\"./app/login/module\":6,\"./app/ordemproducao/module\":7,\"./app/pedidocompra/module\":8,\"./app/produto/module\":9,\"./app/relatorio/module\":10,\"./app/usuario/module\":11,\"./app/venda/module\":12}],2:[function(require,module,exports){\n'use strict';\n\nangular.module('app.cliente', ['ui.router']).config([\"$stateProvider\", function ($stateProvider) {\n    $stateProvider.state('cliente.lista', {\n        url: \"/lista\",\n        templateUrl: 'cliente/lista.html',\n        controller: 'ClienteListaController'\n    }).state('cliente.novo', {\n        url: \"/novo\",\n        templateUrl: 'cliente/form.html',\n        controller: 'ClienteNovoController'\n    }).state('cliente.editar', {\n        url: \"/{id}\",\n        templateUrl: 'cliente/form.html',\n        controller: 'ClienteEditarController'\n    });\n}]).controller('ClienteListaController', ['$scope', 'seed', '$state', function ($scope, seed, $state) {\n    $scope.clientes = seed.clientes;\n    $scope.remover = function (index) {\n        $scope.clientes.splice(index, 1);\n    };\n    $scope.alterar = function (index) {\n        $state.go('cliente.editar', { id: index });\n    };\n}]).controller('ClienteNovoController', ['$scope', function ($scope) {\n    $scope.opts = ['MATÉRIA-PRIMA', 'REVENDA', 'MANUFATURA'];\n}]).controller('ClienteEditarController', ['$scope', function ($scope) {\n    $scope.opts = ['MATÉRIA-PRIMA', 'REVENDA', 'MANUFATURA'];\n}]);\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nangular.module('app.encomenda', ['ui.router', 'app.produto']).config(['$stateProvider', function ($stateProvider) {\n    $stateProvider.state('encomenda.lista', {\n        url: \"/lista\",\n        templateUrl: 'app/encomenda/lista.html',\n        controller: 'EncomendaListaController'\n    }).state('encomenda.novo', {\n        url: \"/novo\",\n        templateUrl: 'app/encomenda/form.html',\n        controller: 'EncomendaFormController',\n        resolve: {\n            entity: function entity() {\n                return {};\n            }\n        }\n    }).state('encomenda.editar', { // isso é um estado\n        url: \"/:id\", // isso  é uma rota\n        templateUrl: 'app/encomenda/form.html',\n        controller: 'EncomendaFormController',\n        resolve: {\n            entity: ['EncomendaService', '$stateParams', function (EncomendaService, $stateParams) {\n                return EncomendaService.getById($stateParams.id).then(function (data) {\n                    return data.data;\n                });\n            }]\n        }\n    });\n}]).controller('EncomendaListaController', ['$scope', '$state', 'EncomendaService', function ($scope, $state, EncomendaService) {\n    function getDados() {\n        EncomendaService.get().then(function (data) {\n            $scope.encomendas = data.data;\n        });\n    }\n    getDados();\n\n    $scope.remover = function (id) {\n        // tudo q esta no scopo esta no html\n        EncomendaService.remove(id).then(function (data) {\n            getDados();\n        });\n    };\n\n    $scope.alterar = function (id) {\n        $state.go('encomenda.editar', { id: id });\n    };\n}]).controller('EncomendaFormController', ['$scope', '$state', 'EncomendaService', 'entity', 'ProdutoService', function ($scope, $state, EncomendaService, entity, ProdutoService) {\n    $scope.entity = entity;\n    $scope.entity.produtos = $scope.entity.produtos || [];\n    $scope.save = function (entity) {\n        console.log(entity);\n        entity.horaEntrega = $scope.horaEntrega;\n        entity.dataEntrega = $scope.dataEntrega;\n        if (entity._id == null) {\n            entity.dataSolicitacao = new Date();\n            EncomendaService.save(entity).then(function (data) {\n                $state.go('encomenda.lista');\n            }, errorResponse);\n        } else {\n            EncomendaService.update(entity).then(function (data) {\n                $state.go('encomenda.lista');\n            }, errorResponse);\n        }\n    };\n    function errorResponse(data) {\n        console.log(data);\n    }\n\n    $scope.searchProduct = function (param) {\n        return ProdutoService.getByName(param).then(function (data) {\n            return data;\n        });\n    };\n\n    $scope.remover = function (index) {\n        $scope.entity.produtos.splice(index, 1);\n    };\n\n    $scope.add = function (obj) {\n        $scope.entity.produtos.push(angular.copy(obj));\n        $scope.produto = {};\n    };\n\n    $scope.arrStatus = ['EM PRODUÇÃO', 'FINALIZADO', 'ENTREGUE'];\n\n    $scope.entity.status = $scope.entity.status || $scope.arrStatus[0];\n    $scope.horaEntrega = new Date($scope.entity.horaEntrega) || new Date();\n    $scope.entity.dataEntrega = new Date($scope.entity.dataEntrega) || new Date();\n    if ($scope.entity.horaEntrega != null) {\n        $scope.horaEntrega = new Date($scope.entity.horaEntrega);\n    }\n    if ($scope.entity.dataEntrega != null) {\n        $scope.dataEntrega = new Date($scope.entity.dataEntrega);\n    }\n}]).service('EncomendaService', ['$http', function ($http) {\n    var url = window.location.origin + '/api/encomenda';\n    this.get = function (page, size) {\n        return $http.get(url);\n    };\n    this.getById = function (id) {\n        return $http.get(url + '/' + id);\n    };\n    this.save = function (entity) {\n        return $http.post(url, entity);\n    };\n    this.update = function (entity) {\n        return $http.put(url + '/' + entity._id, entity);\n    };\n    this.remove = function (id) {\n        return $http['delete'](url + '/' + id);\n    };\n}]);\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nangular.module('app.entrega', ['ui.router']).config(['$stateProvider', function ($stateProvider) {\n    $stateProvider.state('entrega.lista', {\n        url: \"/lista\",\n        templateUrl: 'entrega/lista.html',\n        controller: 'EntregaListaController'\n    }).state('entrega.edit', {\n        url: \"/{id}\",\n        templateUrl: 'entrega/form.html',\n        controller: 'EntregaEditarController'\n    });\n}]).controller('EntregaListaController', ['$scope', function ($scope) {\n    $scope.data = new Date();\n}]);\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nangular.module('app.funcionario', ['ui.router']).config([\"$stateProvider\", function ($stateProvider) {\n    $stateProvider.state('funcionario.lista', {\n        url: \"/lista\",\n        templateUrl: 'funcionario/lista.html',\n        controller: 'FuncionarioListaController'\n    }).state('funcionario.novo', {\n        url: \"/novo\",\n        templateUrl: 'funcionario/form.html',\n        controller: 'FuncionarioNovoController'\n    }).state('funcionario.entrada', {\n        url: \"/entrada\",\n        templateUrl: 'funcionario/entrada.html',\n        controller: 'FuncionarioEntradaController'\n    }).state('funcionario.editar', {\n        url: \"/{id}\",\n        templateUrl: 'funcionario/form.html',\n        controller: 'FuncionarioEditarController'\n    });\n}]).controller('FuncionarioListaController', ['$scope', 'seed', '$state', function ($scope, seed, $state) {\n    $scope.funcionarios = seed.funcionarios;\n    $scope.alterar = function (index) {\n        $state.go('funcionario.editar', { id: index });\n    };\n    $scope.remover = function (index) {\n        $scope.funcionarios.splice(index, 1);\n    };\n}]).controller('FuncionarioNovoController', ['$scope', function ($scope) {\n    $scope.opts = ['MATÉRIA-PRIMA', 'REVENDA', 'MANUFATURA'];\n}]).controller('FuncionarioEditarController', ['$scope', function ($scope) {\n    $scope.opts = ['MATÉRIA-PRIMA', 'REVENDA', 'MANUFATURA'];\n}]).controller('FuncionarioEntradaController', ['$scope', '$state', function ($scope, $state) {\n    $scope.opts = ['MATÉRIA-PRIMA', 'REVENDA', 'MANUFATURA'];\n    $scope.entrada = function () {\n        var data = new Date();\n        alert('Entrada ou saida em ' + data.getHours() + ':' + data.getMinutes());\n        $scope.login = '';\n        $scope.senha = '';\n    };\n}]);\n\n},{}],6:[function(require,module,exports){\n'use strict';\nangular.module('app.login', ['ui.router']).config(['$stateProvider', function ($stateProvider) {\n    $stateProvider.state('login', {\n        url: \"/login\",\n        templateUrl: './app/login/login.html',\n        controller: 'LoginController'\n    });\n}]).controller('LoginController', ['$scope', 'LoginService', '$state', function ($scope, LoginService, $state) {\n    LoginService.doLogout();\n\n    $scope.doLogin = function (user) {\n        LoginService.doLogin(user).then(function (data) {\n            sessionStorage.setItem('token', data.data.token);\n            $state.go('home');\n        });\n    };\n}]).service('LoginService', ['$http', function ($http) {\n    var url = location.origin + '/authenticate';\n    this.doLogin = function (user) {\n        return $http.post(url, user);\n    };\n    this.doLogout = function () {\n        sessionStorage.removeItem('token');\n    };\n}]);\n\n},{}],7:[function(require,module,exports){\n'use strict';\n\nangular.module('app.ordemProducao', ['ui.router']).config(['$stateProvider', function ($stateProvider) {\n    $stateProvider.state('ordemProducao.lista', {\n        url: \"/lista\",\n        templateUrl: 'app/ordemproducao/lista.html',\n        controller: 'ordemProducaoListaController'\n    }).state('ordemProducao.novo', {\n        url: \"/novo\",\n        templateUrl: 'app/ordemproducao/form.html',\n        controller: 'ordemProducaoFormController',\n        resolve: {\n            entity: function entity() {\n                return {};\n            }\n        }\n    }).state('ordemProducao.editar', { // isso é um estado\n        url: \"/:id\", // isso  é uma rota\n        templateUrl: 'app/ordemproducao/form.html',\n        controller: 'ordemProducaoFormController',\n        resolve: {\n            entity: ['ordemProducaoService', '$stateParams', function (ordemProducaoService, $stateParams) {\n                return ordemProducaoService.getById($stateParams.id).then(function (data) {\n                    return data.data;\n                });\n            }]\n        }\n    });\n}]).controller('ordemProducaoListaController', ['$scope', '$state', 'ordemProducaoService', function ($scope, $state, ordemProducaoService) {\n    function getDados() {\n        ordemProducaoService.get().then(function (data) {\n            $scope.ordensProducao = data.data;\n        });\n    }\n    getDados();\n\n    $scope.remover = function (id) {\n        // tudo q esta no scopo esta no html\n        ordemProducaoService.remove(id).then(function (data) {\n            getDados();\n        });\n    };\n\n    $scope.alterar = function (id) {\n        $state.go('ordemProducao.editar', { id: id });\n    };\n}]).controller('ordemProducaoFormController', ['$scope', '$state', 'ordemProducaoService', 'entity', 'ProdutoService', function ($scope, $state, ordemProducaoService, entity, ProdutoService) {\n    $scope.entity = entity;\n    $scope.entity.itemProducaoLista = $scope.entity.itemProducaoLista || [];\n\n    console.log($scope.entity);\n    $scope.save = function (entity) {\n        if (entity._id == null) {\n            entity.dataPrazo = $scope.dataPrazo;\n            ordemProducaoService.save(entity).then(function (data) {\n                $state.go('ordemProducao.lista');\n            }, errorResponse);\n        } else {\n            entity.dataPrazo = $scope.dataPrazo;\n            ordemProducaoService.update(entity).then(function (data) {\n                $state.go('ordemProducao.lista');\n            }, errorResponse);\n        }\n    };\n    function errorResponse(data) {\n        console.log(data);\n    }\n\n    $scope.entity.tipoOrdem = entity.tipoOrdem;\n    $scope.entity.dataPrazo = new Date($scope.entity.dataPrazo) || new Date();\n    if ($scope.entity.dataPrazo != null) {\n        $scope.dataPrazo = new Date($scope.entity.dataPrazo);\n    }\n}]).service('ordemProducaoService', ['$http', function ($http) {\n    var url = window.location.origin + '/api/ordemproducao';\n    this.get = function (page, size) {\n        return $http.get(url);\n    };\n    this.getById = function (id) {\n        return $http.get(url + '/' + id);\n    };\n    this.save = function (entity) {\n        return $http.post(url, entity);\n    };\n    this.update = function (entity) {\n        return $http.put(url + '/' + entity._id, entity);\n    };\n    this.remove = function (id) {\n        return $http['delete'](url + '/' + id);\n    };\n}]);\n\n},{}],8:[function(require,module,exports){\n'use strict';\n\nangular.module('app.pedidoCompra', ['ui.router']).config(['$stateProvider', function ($stateProvider) {\n    $stateProvider.state('pedidoCompra.lista', {\n        url: \"/lista\",\n        templateUrl: 'app/pedidocompra/lista.html',\n        controller: 'pedidoCompraListaController'\n    }).state('pedidoCompra.novo', {\n        url: \"/novo\",\n        templateUrl: 'app/pedidocompra/form.html',\n        controller: 'pedidoCompraFormController',\n        resolve: {\n            entity: function entity() {\n                return {};\n            }\n        }\n    }).state('pedidoCompra.editar', { // isso é um estado\n        url: \"/:id\", // isso  é uma rota\n        templateUrl: 'app/pedidocompra/form.html',\n        controller: 'pedidoCompraFormController',\n        resolve: {\n            entity: ['pedidoCompraService', '$stateParams', function (pedidoCompraService, $stateParams) {\n                return pedidoCompraService.getById($stateParams.id).then(function (data) {\n                    return data.data;\n                });\n            }]\n        }\n    });\n}]).controller('pedidoCompraListaController', ['$scope', '$state', 'pedidoCompraService', function ($scope, $state, pedidoCompraService) {\n    function getDados() {\n        pedidoCompraService.get().then(function (data) {\n            $scope.pedidoCompras = data.data;\n        });\n    }\n    getDados();\n\n    $scope.remover = function (id) {\n        // tudo q esta no scopo esta no html\n        pedidoCompraService.remove(id).then(function (data) {\n            getDados();\n        });\n    };\n\n    $scope.alterar = function (id) {\n        console.log(id);\n        $state.go('pedidoCompra.editar', { id: id });\n    };\n}]).controller('pedidoCompraFormController', ['$scope', '$state', 'pedidoCompraService', 'entity', function ($scope, $state, pedidoCompraService, entity) {\n    $scope.entity = entity;\n    $scope.entity.itensPedido = $scope.entity.itensPedido || [];\n    $scope.save = function (entity) {\n        if (entity._id == null) {\n            entity.dataVencimento = $scope.dataVencimento;\n            pedidoCompraService.save(entity).then(function (data) {\n                $state.go('pedidoCompra.lista');\n            }, errorResponse);\n        } else {\n            entity.dataVencimento = $scope.dataVencimento;\n            pedidoCompraService.update(entity).then(function (data) {\n                $state.go('pedidoCompra.lista');\n            }, errorResponse);\n        }\n    };\n    function errorResponse(data) {\n        console.log(data);\n    }\n\n    $scope.remover = function (index) {\n        console.log($scope.entity.itensPedido);\n        $scope.entity.itensPedido.splice(index, 1);\n    };\n\n    $scope.add = function (obj) {\n        $scope.entity.itensPedido.push(angular.copy(obj));\n        $scope.itemPedidoCompra = {};\n    };\n\n    $scope.entity.dataVencimento = new Date($scope.entity.dataVencimento) || new Date();\n    if ($scope.entity.dataVencimento != null) {\n        $scope.dataVencimento = new Date($scope.entity.dataVencimento);\n    }\n}]).service('pedidoCompraService', ['$http', function ($http) {\n    var url = window.location.origin + '/api/pedidocompra';\n    this.get = function (page, size) {\n        return $http.get(url);\n    };\n    this.getById = function (id) {\n        return $http.get(url + '/' + id);\n    };\n    this.save = function (entity) {\n        return $http.post(url, entity);\n    };\n    this.update = function (entity) {\n        return $http.put(url + '/' + entity._id, entity);\n    };\n    this.remove = function (id) {\n        return $http['delete'](url + '/' + id);\n    };\n}]);\n\n},{}],9:[function(require,module,exports){\n'use strict';\nangular.module('app.produto', ['ui.router']).config(['$stateProvider', function ($stateProvider) {\n  $stateProvider.state('produto.lista', {\n    url: \"/lista\",\n    templateUrl: './app/produto/lista.html',\n    controller: 'ProdutoListaController'\n  }).state('produto.novo', {\n    url: \"/novo\",\n    templateUrl: './app/produto/form.html',\n    controller: 'ProdutoFormController',\n    resolve: {\n      entity: function entity() {\n        return {\n          \"type\": null,\n          \"lowestQuantity\": null,\n          \"code\": null,\n          \"value\": null,\n          \"name\": null,\n          \"supplier\": null,\n          \"description\": null,\n          \"actualQuantity\": 0\n        };\n      }\n    }\n  }).state('produto.editar', {\n    url: \"/:id\",\n    templateUrl: 'app/produto/form.html',\n    controller: 'ProdutoFormController',\n    resolve: {\n      entity: ['ProdutoService', '$stateParams', function (ProdutoService, $stateParams) {\n        return ProdutoService.getId($stateParams.id).then(function (data) {\n          return data;\n        });\n      }]\n    }\n  });\n}]).service('ProdutoService', ['$http', function ($http) {\n  this.get = get;\n  this.getMissing = getMissing;\n  this.getId = getId;\n  this.update = update;\n  this.save = save;\n  this.remove = remove;\n  this.getByName = getByName;\n\n  function get(page) {\n    return $http.get('/api/produto', page).then(function (data) {\n      return data.data;\n    });\n  }\n\n  function getMissing(page) {\n    return $http.get('/api/produto/missing', page).then(function (data) {\n      return data.data;\n    });\n  }\n\n  function getId(id) {\n    return $http.get('/api/produto/' + id).then(function (data) {\n      console.log(data);\n      return data.data;\n    });\n  }\n\n  function getByName(name) {\n    return $http.get('/api/produto/name', {\n      params: {\n        name: name\n      }\n    }).then(function (data) {\n      return data.data;\n    });\n  }\n\n  function update(val) {\n    return $http.put('/api/produto/' + val._id, val);\n  }\n\n  function save(val) {\n    return $http.post('/api/produto', val);\n  }\n\n  function remove(id) {\n    return $http['delete']('/api/produto/' + id);\n  }\n}]).controller('ProdutoListaController', ['$scope', '$state', 'ProdutoService', function ($scope, $state, ProdutoService) {\n\n  $scope.get = function (page) {\n    ProdutoService.get(0).then(function (data) {\n      $scope.list = data;\n    });\n  };\n\n  $scope.getMissing = function (page) {\n    ProdutoService.getMissing(0).then(function (data) {\n      $scope.missingList = data;\n    });\n  };\n\n  $scope.remover = function (id) {\n    ProdutoService.remove(id).then(function (data) {\n      $scope.get(0);\n    });\n  };\n\n  $scope.alterar = function (value) {\n    $state.go('produto.editar', {\n      id: value._id\n    });\n  };\n\n  $scope.get(0);\n  $scope.getMissing(0);\n}]).controller('ProdutoFormController', ['$scope', 'entity', '$state', 'ProdutoService', function ($scope, entity, $state, ProdutoService) {\n  $scope.entity = entity || {};\n  $scope.opts = ['MATERIA-PRIMA', 'REVENDA', 'MANUFATURADO'];\n  $scope.saveOrUpdate = saveOrUpdate;\n\n  function saveOrUpdate(val) {\n    var promise = undefined;\n    promise = val._id ? ProdutoService.update(val) : ProdutoService.save(val);\n    promise.then(function (data) {\n      if (data.status == 200) $state.go('produto.lista');\n    });\n  }\n}]).controller('ProdutoEmFaltaController', ['$scope', '$state', function ($scope, $state) {\n  $scope['in'] = true;\n  $scope.valores = [{\n    nome: 'Farinha Aviação',\n    tipo: 'MATERIA PRIMA',\n    valor: 12.50,\n    qntdMin: 3\n  }];\n  $scope.remover = function (index) {\n    $scope.valores.splice(index, 1);\n  };\n  $scope.alterar = function (index) {\n    $state.go('produto.editar', {\n      id: index\n    });\n  };\n}]);\n\n},{}],10:[function(require,module,exports){\n'use strict';\n\nangular.module('app.relatorio', ['ui.router']).config(['$stateProvider', function ($stateProvider) {\n    $stateProvider.state('relatorio.lista', {\n        url: \"/lista\",\n        templateUrl: 'relatorio/lista.html',\n        controller: 'RelatorioListaController'\n    });\n}]).controller('RelatorioListaController', ['$scope', function ($scope) {\n    $scope.options = ['Geral', 'Despesa', 'Lucro', 'Folha Salarial'];\n    $scope.select = 'Geral';\n    $scope.isAble = function () {\n        if ($scope.select == 'Folha Salarial') {\n            return $scope.inicio;\n        } else if ($scope.select != '') {\n            return $scope.inicio && $scope.fim;\n        }\n    };\n}]);\n\n},{}],11:[function(require,module,exports){\n'use strict';\nangular.module('app.usuario', ['ui.router']).config([\"$stateProvider\", function ($stateProvider) {\n    $stateProvider.state('usuario.lista', {\n        url: \"/lista\",\n        templateUrl: 'app/usuario/lista.html',\n        controller: 'UsuarioListaController'\n    }).state('usuario.novo', {\n        url: \"/novo\",\n        templateUrl: 'app/usuario/form.html',\n        controller: 'UsuarioFormController',\n        resolve: {\n            entity: function entity() {\n                return {};\n            }\n        }\n    }).state('usuario.editar', {\n        url: \"/{id}\",\n        templateUrl: 'app/usuario/form.html',\n        controller: 'UsuarioFormController',\n        resolve: {\n            entity: ['UsuarioService', '$stateParams', function (UsuarioService, $stateParams) {\n                return UsuarioService.getById($stateParams.id).then(function (data) {\n                    return data.data;\n                });\n            }]\n        }\n    });\n}]).controller('UsuarioListaController', ['$scope', '$state', 'UsuarioService', function ($scope, $state, UsuarioService) {\n    function getDados() {\n        UsuarioService.get().then(function (data) {\n            $scope.usuarios = data.data;\n        });\n    }\n    getDados();\n    $scope.remover = function (id) {\n        UsuarioService.remove(id).then(function (data) {\n            getDados();\n        });\n    };\n    $scope.alterar = function (index) {\n        $state.go('usuario.editar', { id: index });\n    };\n}]).controller('UsuarioFormController', ['$scope', 'UsuarioService', '$state', 'entity', function ($scope, UsuarioService, $state, entity) {\n    $scope.entity = entity;\n    $scope.tipos = ['VENDA', 'PRODUCAO', 'ENCOMENDA', 'ESTOQUE', 'ENTREGA', 'GERENCIA'];\n    $scope.save = function (entity) {\n        if (!entity._id) {\n            UsuarioService.save(entity).then(resolveSaveUpdate);\n        } else {\n            UsuarioService.update(entity).then(resolveSaveUpdate);\n        }\n    };\n    function resolveSaveUpdate() {\n        $state.go('usuario.lista');\n    }\n}]).service('UsuarioService', ['$http', function ($http) {\n    var url = window.location.origin + '/api/usuario';\n    this.get = function (page, size) {\n        return $http.get(url);\n    };\n    this.getById = function (id) {\n        return $http.get(url + '/' + id);\n    };\n    this.save = function (entity) {\n        return $http.post(url, entity);\n    };\n    this.update = function (entity) {\n        return $http.put(url + '/' + entity._id, entity);\n    };\n    this.remove = function (id) {\n        return $http['delete'](url + '/' + id);\n    };\n}]);\n\n},{}],12:[function(require,module,exports){\n'use strict';\nangular.module('app.venda', ['ui.router', 'ui.bootstrap']).config([\"$stateProvider\", function ($stateProvider) {\n  $stateProvider.state('venda.lista', {\n    url: \"/lista\",\n    templateUrl: 'venda/list.html',\n    controller: 'VendaController'\n  });\n}]).controller('VendaController', ['$scope', '$modal', function ($scope, $modal) {\n  $scope.sales = [];\n  $scope.getPrecos = function (v) {\n    return v.vendas.reduce(function (prev, next) {\n      return prev += next.number * next.product.value;\n    }, 0);\n  };\n\n  $scope.open = function () {\n    var modalInstance = $modal.open({\n      animation: true,\n      backdrop: false,\n      templateUrl: 'modaltemplate.html',\n      controller: 'ModalController',\n      size: 'md'\n    });\n    modalInstance.result.then(function (value) {\n      $scope.sales.push(value);\n    });\n  };\n}]).controller('ModalController', ['$scope', '$modalInstance', 'seed', function ($scope, $modalInstance, seed) {\n  $scope.products = seed.produtos;\n  $scope.clientes = seed.clientes;\n  $scope.addedProducts = [];\n  $scope.add = function (obj) {\n    $scope.addedProducts.push(angular.copy(obj));\n    $scope.sale.number = 0;\n    $scope.sale.item = $scope.products[0];\n  };\n\n  $scope.close = function (_boolean) {\n    if (_boolean) {\n      $modalInstance.close({\n        cliente: $scope.cliente,\n        vendas: $scope.addedProducts\n      });\n      return 0;\n    }\n    $modalInstance.dismiss();\n  };\n}]);\n\n},{}]},{},[1])\n\n","'use strict';\n\nangular.module('app.cliente', ['ui.router'])\n    .config([\"$stateProvider\", function ($stateProvider) {\n        $stateProvider\n            .state('cliente.lista', {\n                url: \"/lista\"\n                , templateUrl: 'cliente/lista.html'\n                ,controller:'ClienteListaController'\n            })\n            .state('cliente.novo', {\n                url: \"/novo\"\n                , templateUrl: 'cliente/form.html'\n                , controller: 'ClienteNovoController'\n            })\n            .state('cliente.editar', {\n                url: \"/{id}\"\n                , templateUrl: 'cliente/form.html'\n                , controller: 'ClienteEditarController'\n            });\n    }])\n    .controller('ClienteListaController', ['$scope','seed','$state',function ($scope,seed,$state) {\n      $scope.clientes = seed.clientes;\n        $scope.remover = function(index){\n            $scope.clientes.splice(index,1);\n        }\n        $scope.alterar = function(index){\n            $state.go('cliente.editar',{id:index})\n        }\n    }])\n    .controller('ClienteNovoController', ['$scope',function ($scope) {\n        $scope.opts = [\n            'MATÉRIA-PRIMA'\n            , 'REVENDA'\n            , 'MANUFATURA'\n        ]\n    }])\n    .controller('ClienteEditarController', ['$scope',function ($scope) {\n        $scope.opts = [\n            'MATÉRIA-PRIMA'\n            , 'REVENDA'\n            , 'MANUFATURA'\n        ]\n    }]);\n","'use strict';\n\nangular.module('app.encomenda', ['ui.router','app.produto'])\n    .config(['$stateProvider', function ($stateProvider) {\n        $stateProvider\n            .state('encomenda.lista', {\n                url: \"/lista\"\n                ,templateUrl: 'app/encomenda/lista.html'\n                ,controller:'EncomendaListaController'\n            })\n            .state('encomenda.novo', {\n                 url: \"/novo\",\n                 templateUrl: 'app/encomenda/form.html',\n                 controller: 'EncomendaFormController',\n                 resolve: {\n                   entity: function(){\n                     return {};\n                   }\n                 }\n            })\n            .state('encomenda.editar', { // isso é um estado\n                url: \"/:id\"// isso  é uma rota\n                , templateUrl: 'app/encomenda/form.html'\n                , controller: 'EncomendaFormController'\n                , resolve:  {\n                    entity:['EncomendaService','$stateParams',function(EncomendaService,$stateParams){\n                        return EncomendaService.getById($stateParams.id).then(function(data){\n                            return data.data;\n                        })\n                    }]\n                }\n            });\n    }])\n    .controller('EncomendaListaController', ['$scope','$state','EncomendaService',function ($scope,$state,EncomendaService) {\n        function getDados(){\n            EncomendaService.get().then(function(data){\n                $scope.encomendas = data.data;\n            })\n        }\n        getDados();\n\n        $scope.remover = function(id){// tudo q esta no scopo esta no html\n            EncomendaService.remove(id).then(function(data){\n                getDados();\n            })\n        }\n\n        $scope.alterar = function(id){\n            $state.go('encomenda.editar',{id:id});\n        }\n    }])\n    .controller('EncomendaFormController', ['$scope','$state','EncomendaService','entity','ProdutoService',function ($scope,$state,EncomendaService, entity, ProdutoService) {\n        $scope.entity = entity;\n        $scope.entity.produtos = $scope.entity.produtos || [];\n        $scope.save = function(entity){\n            console.log(entity)\n                entity.horaEntrega = $scope.horaEntrega;\n                entity.dataEntrega = $scope.dataEntrega;\n            if(entity._id == null){\n                entity.dataSolicitacao = new Date();\n                EncomendaService.save(entity).then(function(data){\n                    $state.go('encomenda.lista');\n                },errorResponse)\n            }else{\n                EncomendaService.update(entity).then(function(data){\n                    $state.go('encomenda.lista');\n                },errorResponse)\n            }\n        }\n        function errorResponse(data){\n            console.log(data)\n        }\n\n        $scope.searchProduct = function(param){\n            return ProdutoService.getByName(param).then(function(data){\n                return data;\n            })\n        };\n\n        $scope.remover = function(index){\n            $scope.entity.produtos.splice(index,1);\n        }\n\n        $scope.add = function(obj){\n            $scope.entity.produtos.push(angular.copy(obj));\n            $scope.produto = {};\n        }\n\n\n\n        $scope.arrStatus = [\n            'EM PRODUÇÃO',\n            'FINALIZADO',\n            'ENTREGUE'\n        ];\n\n        $scope.entity.status = $scope.entity.status || $scope.arrStatus[0];\n        $scope.horaEntrega = new Date($scope.entity.horaEntrega) || new Date();\n        $scope.entity.dataEntrega = new Date($scope.entity.dataEntrega) || new Date();\n        if($scope.entity.horaEntrega !=  null){\n            $scope.horaEntrega = new Date($scope.entity.horaEntrega);\n        }\n        if($scope.entity.dataEntrega !=  null){\n            $scope.dataEntrega = new Date($scope.entity.dataEntrega);\n        }\n      }])\n    .service('EncomendaService',['$http', function($http){\n        var url = window.location.origin+'/api/encomenda';\n        this.get = function(page, size){\n            return $http.get(url);\n        }\n        this.getById = function(id){\n            return $http.get(url+'/'+id);\n        }\n        this.save = function(entity){\n            return $http.post(url,entity);\n        }\n        this.update = function(entity){\n            return $http.put(url+'/'+entity._id,entity);\n        }\n        this.remove = function(id){\n            return $http.delete(url+'/'+id);\n        }\n    }]);\n","'use strict';\n\nangular.module('app.entrega', ['ui.router'])\n    .config(['$stateProvider', function ($stateProvider) {\n        $stateProvider\n            .state('entrega.lista', {\n                url: \"/lista\"\n                , templateUrl: 'entrega/lista.html'\n                ,controller:'EntregaListaController'\n            })\n            .state('entrega.edit', {\n                url: \"/{id}\"\n                , templateUrl: 'entrega/form.html'\n                ,controller:'EntregaEditarController'\n            })\n    }])\n    .controller('EntregaListaController', ['$scope',function ($scope) {\n        $scope.data = new Date();\n    }])\n","'use strict';\n\nangular.module('app.funcionario', ['ui.router'])\n    .config([\"$stateProvider\" ,function ($stateProvider) {\n        $stateProvider\n            .state('funcionario.lista', {\n                url: \"/lista\"\n                , templateUrl: 'funcionario/lista.html'\n                , controller: 'FuncionarioListaController'\n            })\n            .state('funcionario.novo', {\n                url: \"/novo\"\n                , templateUrl: 'funcionario/form.html'\n                , controller: 'FuncionarioNovoController'\n            })\n            .state('funcionario.entrada', {\n                url: \"/entrada\"\n                , templateUrl: 'funcionario/entrada.html'\n                , controller: 'FuncionarioEntradaController'\n            })\n            .state('funcionario.editar', {\n                url: \"/{id}\"\n                , templateUrl: 'funcionario/form.html'\n                , controller: 'FuncionarioEditarController'\n            });\n    }])\n    .controller('FuncionarioListaController', ['$scope', 'seed', '$state', function ($scope, seed, $state) {\n        $scope.funcionarios = seed.funcionarios;\n        $scope.alterar = function(index){\n            $state.go('funcionario.editar',{id:index});\n        }\n        $scope.remover = function(index){\n            $scope.funcionarios.splice(index,1);\n        }\n    }])\n    .controller('FuncionarioNovoController', ['$scope', function ($scope) {\n        $scope.opts = [\n            'MATÉRIA-PRIMA'\n            , 'REVENDA'\n            , 'MANUFATURA'\n        ]\n    }])\n    .controller('FuncionarioEditarController', ['$scope', function ($scope) {\n        $scope.opts = [\n            'MATÉRIA-PRIMA'\n            , 'REVENDA'\n            , 'MANUFATURA'\n        ]\n    }])\n    .controller('FuncionarioEntradaController', ['$scope','$state', function ($scope,$state) {\n        $scope.opts = [\n            'MATÉRIA-PRIMA'\n            , 'REVENDA'\n            , 'MANUFATURA'\n        ];\n        $scope.entrada = function(){\n            var data = new Date();\n            alert('Entrada ou saida em '+ data.getHours()+':'+data.getMinutes());\n            $scope.login = '';\n            $scope.senha = '';\n        }\n\n    }]);\n","'use strict';\nangular.module('app.login', ['ui.router'])\n    .config(['$stateProvider', function($stateProvider){\n        $stateProvider\n            .state('login', {\n                url: \"/login\"\n                , templateUrl:'./app/login/login.html'\n                , controller:'LoginController'\n            })\n    }])\n    .controller('LoginController',['$scope','LoginService','$state', function($scope,LoginService,$state){\n        LoginService.doLogout();\n\n        $scope.doLogin = (user)=>{\n            LoginService.doLogin(user).then((data)=> {\n                sessionStorage.setItem('token',data.data.token);\n                $state.go('home');\n            })\n        }\n    }])\n    .service('LoginService',['$http',function($http){\n        var url = location.origin+'/authenticate';\n        this.doLogin = (user)=> {\n            return $http.post(url, user);\n        }\n        this.doLogout = function(){\n            sessionStorage.removeItem('token');\n        }\n    }])\n","'use strict';\n\nangular.module('app.ordemProducao', ['ui.router'])\n    .config(['$stateProvider', function ($stateProvider) {\n        $stateProvider\n            .state('ordemProducao.lista', {\n                url: \"/lista\"\n                ,templateUrl: 'app/ordemproducao/lista.html'\n                ,controller:'ordemProducaoListaController'\n            })\n            .state('ordemProducao.novo', {\n                 url: \"/novo\",\n                 templateUrl: 'app/ordemproducao/form.html',\n                 controller: 'ordemProducaoFormController',\n                 resolve: {\n                   entity: function(){\n                     return {};\n                   }\n                 }\n            })\n            .state('ordemProducao.editar', { // isso é um estado\n                url: \"/:id\"// isso  é uma rota\n                , templateUrl: 'app/ordemproducao/form.html'\n                , controller: 'ordemProducaoFormController'\n                , resolve:  {\n                    entity:['ordemProducaoService','$stateParams',function(ordemProducaoService,$stateParams){\n                        return ordemProducaoService.getById($stateParams.id).then(function(data){\n                            return data.data;\n                        })\n                    }]\n                }\n            });\n    }])\n    .controller('ordemProducaoListaController', ['$scope','$state','ordemProducaoService',function ($scope,$state,ordemProducaoService) {\n        function getDados(){\n            ordemProducaoService.get().then(function(data){\n                $scope.ordensProducao = data.data;\n            })\n        }\n        getDados();\n\n        $scope.remover = function(id){// tudo q esta no scopo esta no html\n            ordemProducaoService.remove(id).then(function(data){\n                getDados();\n            })\n        }\n\n        $scope.alterar = function(id){\n            $state.go('ordemProducao.editar',{id:id});\n        }\n    }])\n    .controller('ordemProducaoFormController', ['$scope','$state','ordemProducaoService','entity','ProdutoService',function ($scope,$state,ordemProducaoService, entity, ProdutoService) {\n        $scope.entity = entity;\n        $scope.entity.itemProducaoLista = $scope.entity.itemProducaoLista || [];\n\n        console.log($scope.entity);\n        $scope.save = function(entity){\n            if(entity._id == null){\n                entity.dataPrazo = $scope.dataPrazo;\n                ordemProducaoService.save(entity).then(function(data){\n                    $state.go('ordemProducao.lista');\n                },errorResponse)\n            }else{\n                entity.dataPrazo = $scope.dataPrazo;\n                ordemProducaoService.update(entity).then(function(data){\n                    $state.go('ordemProducao.lista');\n                },errorResponse)\n            }\n        }\n        function errorResponse(data){\n            console.log(data)\n        }\n\n        $scope.entity.tipoOrdem = entity.tipoOrdem;\n        $scope.entity.dataPrazo = new Date($scope.entity.dataPrazo) || new Date();\n        if($scope.entity.dataPrazo !=  null){\n            $scope.dataPrazo = new Date($scope.entity.dataPrazo);\n        }\n      }])\n    .service('ordemProducaoService',['$http', function($http){\n        var url = window.location.origin+'/api/ordemproducao';\n        this.get = function(page, size){\n            return $http.get(url);\n        }\n        this.getById = function(id){\n            return $http.get(url+'/'+id);\n        }\n        this.save = function(entity){\n            return $http.post(url,entity);\n        }\n        this.update = function(entity){\n            return $http.put(url+'/'+entity._id,entity);\n        }\n        this.remove = function(id){\n            return $http.delete(url+'/'+id);\n        }\n    }]);\n","'use strict';\n\nangular.module('app.pedidoCompra', ['ui.router'])\n    .config(['$stateProvider', function ($stateProvider) {\n        $stateProvider\n            .state('pedidoCompra.lista', {\n                url: \"/lista\"\n                ,templateUrl: 'app/pedidocompra/lista.html'\n                ,controller:'pedidoCompraListaController'\n            })\n            .state('pedidoCompra.novo', {\n                 url: \"/novo\",\n                 templateUrl: 'app/pedidocompra/form.html',\n                 controller: 'pedidoCompraFormController',\n                 resolve: {\n                   entity: function(){\n                     return {};\n                   }\n                 }\n            })\n            .state('pedidoCompra.editar', { // isso é um estado\n                url: \"/:id\"// isso  é uma rota\n                , templateUrl: 'app/pedidocompra/form.html'\n                , controller: 'pedidoCompraFormController'\n                , resolve:  {\n                    entity:['pedidoCompraService','$stateParams',function(pedidoCompraService,$stateParams){\n                        return pedidoCompraService.getById($stateParams.id).then(function(data){\n                            return data.data;\n                        })\n                    }]\n                }\n            });\n    }])\n    .controller('pedidoCompraListaController', ['$scope','$state','pedidoCompraService',function ($scope,$state,pedidoCompraService) {\n        function getDados(){\n            pedidoCompraService.get().then(function(data){\n                $scope.pedidoCompras = data.data;\n            })\n        }\n        getDados();\n\n        $scope.remover = function(id){// tudo q esta no scopo esta no html\n            pedidoCompraService.remove(id).then(function(data){\n                getDados();\n            })\n        }\n\n        $scope.alterar = function(id){\n          console.log(id);\n            $state.go('pedidoCompra.editar',{id:id});\n        }\n    }])\n    .controller('pedidoCompraFormController', ['$scope','$state','pedidoCompraService','entity',function ($scope,$state,pedidoCompraService, entity) {\n        $scope.entity = entity;\n        $scope.entity.itensPedido = $scope.entity.itensPedido || [];\n        $scope.save = function(entity){\n            if(entity._id == null){\n                entity.dataVencimento = $scope.dataVencimento;\n                pedidoCompraService.save(entity).then(function(data){\n                    $state.go('pedidoCompra.lista');\n                },errorResponse)\n            }else{\n                entity.dataVencimento = $scope.dataVencimento;\n                pedidoCompraService.update(entity).then(function(data){\n                    $state.go('pedidoCompra.lista');\n                },errorResponse)\n            }\n        }\n        function errorResponse(data){\n            console.log(data)\n        }\n\n        $scope.remover = function(index){\n            console.log($scope.entity.itensPedido);\n            $scope.entity.itensPedido.splice(index,1);\n        }\n\n        $scope.add = function(obj){\n            $scope.entity.itensPedido.push(angular.copy(obj));\n            $scope.itemPedidoCompra = {};\n\n        }\n\n        $scope.entity.dataVencimento = new Date($scope.entity.dataVencimento) || new Date();\n        if($scope.entity.dataVencimento !=  null){\n            $scope.dataVencimento = new Date($scope.entity.dataVencimento);\n        }\n      }])\n    .service('pedidoCompraService',['$http', function($http){\n        var url = window.location.origin+'/api/pedidocompra';\n        this.get = function(page, size){\n            return $http.get(url);\n        }\n        this.getById = function(id){\n            return $http.get(url+'/'+id);\n        }\n        this.save = function(entity){\n            return $http.post(url,entity);\n        }\n        this.update = function(entity){\n            return $http.put(url+'/'+entity._id,entity);\n        }\n        this.remove = function(id){\n            return $http.delete(url+'/'+id);\n        }\n    }]);","'use strict';\nangular.module('app.produto', ['ui.router'])\n  .config(['$stateProvider', function($stateProvider) {\n    $stateProvider\n      .state('produto.lista', {\n        url: \"/lista\",\n        templateUrl: './app/produto/lista.html',\n        controller: 'ProdutoListaController'\n      })\n      .state('produto.novo', {\n        url: \"/novo\",\n        templateUrl: './app/produto/form.html',\n        controller: 'ProdutoFormController',\n        resolve: {\n          entity: function() {\n            return {\n              \"type\": null,\n              \"lowestQuantity\": null,\n              \"code\": null,\n              \"value\": null,\n              \"name\": null,\n              \"supplier\": null,\n              \"description\": null,\n              \"actualQuantity\": 0\n            };\n          }\n        }\n      })\n      .state('produto.editar', {\n        url: \"/:id\",\n        templateUrl: 'app/produto/form.html',\n        controller: 'ProdutoFormController',\n        resolve: {\n          entity: ['ProdutoService', '$stateParams', function(ProdutoService, $stateParams) {\n            return ProdutoService\n              .getId($stateParams.id)\n              .then(function(data) {\n                return data;\n              })\n          }]\n        }\n      });\n  }])\n  .service('ProdutoService', ['$http', function($http) {\n    this.get        = get;\n    this.getMissing = getMissing;\n    this.getId      = getId;\n    this.update     = update;\n    this.save       = save;\n    this.remove     = remove;\n    this.getByName  = getByName;\n\n    function get(page) {\n      return $http.get('/api/produto', page).then(function(data) {\n        return data.data;\n      });\n    }\n\n    function getMissing(page) {\n      return $http.get('/api/produto/missing',page).then(function(data) {\n        return data.data;\n      });\n    }\n\n    function getId(id) {\n      return $http.get('/api/produto/' + id).then(function(data) {\n        console.log(data)\n        return data.data;\n      });\n    }\n\n    function getByName(name) {\n      return $http.get('/api/produto/name', {\n        params: {\n          name: name\n        }\n      }).then(function(data) {\n        return data.data;\n      });\n    }\n\n    function update(val) {\n      return $http.put('/api/produto/' + val._id, val);\n    }\n\n    function save(val) {\n      return $http.post('/api/produto', val);\n    }\n\n    function remove(id) {\n      return $http.delete('/api/produto/' + id);\n    }\n\n  }])\n  .controller('ProdutoListaController', ['$scope', '$state', 'ProdutoService', function($scope, $state, ProdutoService) {\n\n\n    $scope.get = function(page) {\n      ProdutoService.get(0)\n        .then(data => {\n          $scope.list = data;\n        })\n    }\n\n    $scope.getMissing = function(page) {\n      ProdutoService.getMissing(0)\n        .then(data => {\n          $scope.missingList = data;\n        })\n    }\n\n    $scope.remover = function(id) {\n      ProdutoService\n        .remove(id)\n        .then(data => {\n          $scope.get(0);\n        })\n    }\n\n    $scope.alterar = function(value) {\n      $state.go('produto.editar', {\n        id: value._id\n      });\n    }\n\n    $scope.get(0);\n    $scope.getMissing(0);\n  }])\n  .controller('ProdutoFormController', ['$scope', 'entity', '$state', 'ProdutoService', function($scope, entity, $state, ProdutoService) {\n    $scope.entity = entity || {};\n    $scope.opts = ['MATERIA-PRIMA', 'REVENDA', 'MANUFATURADO']\n    $scope.saveOrUpdate = saveOrUpdate;\n\n    function saveOrUpdate(val) {\n      let promise;\n      promise = val._id ? ProdutoService.update(val) : ProdutoService.save(val);\n      promise.then(function(data) {\n        if (data.status == 200) $state.go('produto.lista');\n      })\n    }\n  }])\n  .controller('ProdutoEmFaltaController', ['$scope', '$state', function($scope, $state) {\n    $scope.in = true;\n    $scope.valores = [{\n      nome: 'Farinha Aviação',\n      tipo: 'MATERIA PRIMA',\n      valor: 12.50,\n      qntdMin: 3\n    }]\n    $scope.remover = function(index) {\n      $scope.valores.splice(index, 1);\n    }\n    $scope.alterar = function(index) {\n      $state.go('produto.editar', {\n        id: index\n      });\n    }\n  }]);\n","'use strict';\n\nangular.module('app.relatorio', ['ui.router'])\n    .config(['$stateProvider',function ($stateProvider) {\n        $stateProvider\n            .state('relatorio.lista', {\n                url: \"/lista\"\n                , templateUrl: 'relatorio/lista.html'\n                ,controller:'RelatorioListaController'\n            })\n    }])\n    .controller('RelatorioListaController', ['$scope',function ($scope) {\n            $scope.options = [\n            'Geral',\n            'Despesa',\n            'Lucro',\n            'Folha Salarial'\n            ]\n            $scope.select = 'Geral';\n        $scope.isAble = function(){\n            if($scope.select == 'Folha Salarial'){\n                return $scope.inicio;\n            }else if($scope.select != ''){\n                return $scope.inicio && $scope.fim;\n            }\n        }\n    }])\n","'use strict';\nangular.module('app.usuario', ['ui.router'])\n    .config([\"$stateProvider\", function ($stateProvider) {\n        $stateProvider\n            .state('usuario.lista', {\n                url: \"/lista\"\n                , templateUrl: 'app/usuario/lista.html'\n                ,controller:'UsuarioListaController'\n            })\n            .state('usuario.novo', {\n                url: \"/novo\"\n                , templateUrl: 'app/usuario/form.html'\n                , controller: 'UsuarioFormController'\n                , resolve: {\n                    entity: function(){\n                        return {};\n                    }\n                }\n            })\n            .state('usuario.editar', {\n                url: \"/{id}\"\n                , templateUrl: 'app/usuario/form.html'\n                , controller: 'UsuarioFormController'\n                , resolve: {\n                    entity:['UsuarioService','$stateParams',function(UsuarioService,$stateParams){\n                        return UsuarioService.getById($stateParams.id).then(function(data){\n                            return data.data;\n                        })\n                    }]\n                }\n            });\n    }])\n    .controller('UsuarioListaController', ['$scope','$state','UsuarioService',function ($scope,$state,UsuarioService) {\n        function getDados(){\n            UsuarioService.get().then(function(data){\n                $scope.usuarios = data.data;\n            })\n        }\n        getDados();\n        $scope.remover = function(id){\n            UsuarioService.remove(id).then(function(data){\n                getDados();\n            })\n        }\n        $scope.alterar = function(index){\n            $state.go('usuario.editar',{id:index})\n        }\n    }])\n    .controller('UsuarioFormController', ['$scope','UsuarioService','$state', 'entity',function ($scope,UsuarioService,$state,entity) {\n        $scope.entity = entity;\n        $scope.tipos = [\n            'VENDA'\n            , 'PRODUCAO'\n            , 'ENCOMENDA'\n            , 'ESTOQUE'\n            , 'ENTREGA'\n            , 'GERENCIA'\n          ]\n        $scope.save = function(entity){\n            if(!entity._id){\n                UsuarioService.save(entity).then(resolveSaveUpdate)\n            }else{\n                UsuarioService.update(entity).then(resolveSaveUpdate)\n            }\n        }\n        function resolveSaveUpdate(){\n            $state.go('usuario.lista');\n        }\n    }])\n    .service('UsuarioService',['$http',function($http){\n        var url = window.location.origin+'/api/usuario';\n        this.get = function(page, size){\n            return $http.get(url);\n        }\n        this.getById = function(id){\n            return $http.get(url+'/'+id);\n        }\n        this.save = function(entity){\n            return $http.post(url,entity);\n        }\n        this.update = function(entity){\n            return $http.put(url+'/'+entity._id,entity);\n        }\n        this.remove = function(id){\n            return $http.delete(url+'/'+id);\n        }\n    }]);\n","'use strict';\nangular.module('app.venda', ['ui.router','ui.bootstrap'])\n    .config([\"$stateProvider\", function ($stateProvider) {\n        $stateProvider\n            .state('venda.lista', {\n                url: \"/lista\"\n                , templateUrl: 'venda/list.html'\n                ,controller:'VendaController'\n            })\n    }])\n    .controller('VendaController', ['$scope','$modal', function ($scope,$modal) {\n      $scope.sales = [];\n      $scope.getPrecos = function(v){\n        return v.vendas.reduce(function(prev,next){\n          return prev += (next.number * next.product.value);\n        },0)\n      }\n\n        $scope.open = function(){\n          var modalInstance = $modal.open({\n            animation: true,\n            backdrop: false,\n            templateUrl: 'modaltemplate.html',\n            controller: 'ModalController',\n            size: 'md'\n          })\n          modalInstance.result.then(function(value){\n            $scope.sales.push(value);\n          })\n        }\n    }])\n    .controller('ModalController',['$scope','$modalInstance','seed',function($scope,$modalInstance,seed){\n      $scope.products = seed.produtos;\n      $scope.clientes = seed.clientes;\n      $scope.addedProducts = [];\n      $scope.add = function(obj){\n        $scope.addedProducts.push(angular.copy(obj));\n        $scope.sale.number = 0;\n        $scope.sale.item = $scope.products[0];\n      }\n\n      $scope.close = function(_boolean){\n        if(_boolean){\n           $modalInstance.close({\n             cliente: $scope.cliente,\n             vendas: $scope.addedProducts\n           });\n           return 0;\n        }\n       $modalInstance.dismiss();\n      }\n    }])\n"],"sourceRoot":"/source/"}