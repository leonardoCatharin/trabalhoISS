{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","public/app.js","bundle.js","public/app/cliente/module.js","public/app/encomenda/module.js","public/app/entrega/module.js","public/app/funcionario/module.js","public/app/login/module.js","public/app/ordemproducao/module.js","public/app/pedidocompra/module.js","public/app/produto/module.js","public/app/relatorio/module.js","public/app/usuario/module.js","public/app/venda/module.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","angular","config","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","./app/cliente/module","./app/encomenda/module","./app/entrega/module","./app/funcionario/module","./app/login/module","./app/ordemproducao/module","./app/pedidocompra/module","./app/produto/module","./app/relatorio/module","./app/usuario/module","./app/venda/module",2,"controller","$scope","seed","$state","clientes","remover","index","splice","alterar","go","id","opts",3,"resolve","entity","EncomendaService","$stateParams","getById","then","data","getDados","get","encomendas","remove","console","log","ProdutoService","errorResponse","produtos","save","_id","dataSolicitacao","Date","horaEntrega","toString","dataEntrega","alert","update","add","obj","push","copy","produto","arrStatus","status","service","$http","this","page","size","post","put",4,5,"funcionarios","entrada","getHours","getMinutes","login","senha",6,7,"ordemProducao","ordemProducaoService","ordensProducao","itemProducao","dataPrazo","arrTipoOrdens","tipoOrdem","window","location","origin",8,"pedidoCompraService","pedidoCompras","itensPedido","dataVencimento","itemPedidoCompra",9,"getId","val","list","value","valores","saveOrUpdate","promise","undefined","nome","tipo","valor","qntdMin",10,"options","select","isAble","inicio","fim",11,"UsuarioService","usuarios","resolveSaveUpdate","tipos",12,"$modal","sales","getPrecos","v","vendas","reduce","prev","next","number","product","open","modalInstance","animation","backdrop","result","$modalInstance","products","addedProducts","sale","item","close","_boolean","cliente","dismiss"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n  require('./app/login/module');\n  require('./app/produto/module');\n  require('./app/cliente/module');\n  require('./app/funcionario/module');\n  require('./app/venda/module');\n  require('./app/pedidocompra/module');\n  require('./app/ordemproducao/module');\n  require('./app/relatorio/module');\n  require('./app/entrega/module');\n  require('./app/encomenda/module');\n  require('./app/usuario/module');\n\nangular.module('myApp', [\n    'ui.router'\n    , 'ui.utils.masks'\n    , 'app.login'\n    , 'app.produto'\n    , 'app.cliente'\n    , 'app.funcionario'\n    , 'app.venda'\n    , 'app.pedidoCompra'\n    , 'app.ordemProducao'\n    , 'app.relatorio'\n    , 'app.entrega'\n    , 'app.encomenda'\n    , 'app.usuario'\n\n]).config(['$stateProvider', '$urlRouterProvider',($stateProvider, $urlRouterProvider) => {\n    $urlRouterProvider.otherwise(\"/produto\");\n    $stateProvider\n        .state('produto', {\n            url: \"/produto\"\n            ,templateUrl:'base.html'\n        })\n        .state('cliente', {\n            url: \"/cliente\"\n            ,templateUrl:'base.html'\n        })\n        .state('funcionario', {\n            url: \"/funcionario\"\n            ,templateUrl:'base.html'\n        })\n        .state('venda', {\n            url: \"/venda\"\n            ,templateUrl:'base.html'\n        })\n        .state('pedidoCompra', {\n            url: \"/pedidoCompra\"\n            ,templateUrl:'base.html'\n        })\n        .state('ordemProducao', {\n            url: \"/ordemproducao\"\n            ,templateUrl:'base.html'\n        })\n        .state('relatorio', {\n            url: \"/relatorio\"\n            ,templateUrl:'base.html'\n        })\n        .state('entrega', {\n            url: \"/entrega\"\n            ,templateUrl:'base.html'\n        })\n        .state('encomenda', {\n            url: \"/encomenda\"\n            ,templateUrl:'base.html'\n        })\n        .state('usuario', {\n            url: \"/usuario\"\n            ,templateUrl:'base.html'\n        });\n\n}]);","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nrequire('./app/login/module');\nrequire('./app/produto/module');\nrequire('./app/cliente/module');\nrequire('./app/funcionario/module');\nrequire('./app/venda/module');\nrequire('./app/pedidocompra/module');\nrequire('./app/ordemproducao/module');\nrequire('./app/relatorio/module');\nrequire('./app/entrega/module');\nrequire('./app/encomenda/module');\nrequire('./app/usuario/module');\n\nangular.module('myApp', ['ui.router', 'ui.utils.masks', 'app.login', 'app.produto', 'app.cliente', 'app.funcionario', 'app.venda', 'app.pedidoCompra', 'app.ordemProducao', 'app.relatorio', 'app.entrega', 'app.encomenda', 'app.usuario']).config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\n    $urlRouterProvider.otherwise(\"/produto\");\n    $stateProvider.state('produto', {\n        url: \"/produto\",\n        templateUrl: 'base.html'\n    }).state('cliente', {\n        url: \"/cliente\",\n        templateUrl: 'base.html'\n    }).state('funcionario', {\n        url: \"/funcionario\",\n        templateUrl: 'base.html'\n    }).state('venda', {\n        url: \"/venda\",\n        templateUrl: 'base.html'\n    }).state('pedidoCompra', {\n        url: \"/pedidoCompra\",\n        templateUrl: 'base.html'\n    }).state('ordemProducao', {\n        url: \"/ordemproducao\",\n        templateUrl: 'base.html'\n    }).state('relatorio', {\n        url: \"/relatorio\",\n        templateUrl: 'base.html'\n    }).state('entrega', {\n        url: \"/entrega\",\n        templateUrl: 'base.html'\n    }).state('encomenda', {\n        url: \"/encomenda\",\n        templateUrl: 'base.html'\n    }).state('usuario', {\n        url: \"/usuario\",\n        templateUrl: 'base.html'\n    });\n}]);\n\n},{\"./app/cliente/module\":2,\"./app/encomenda/module\":3,\"./app/entrega/module\":4,\"./app/funcionario/module\":5,\"./app/login/module\":6,\"./app/ordemproducao/module\":7,\"./app/pedidocompra/module\":8,\"./app/produto/module\":9,\"./app/relatorio/module\":10,\"./app/usuario/module\":11,\"./app/venda/module\":12}],2:[function(require,module,exports){\n'use strict';\n\nangular.module('app.cliente', ['ui.router']).config([\"$stateProvider\", function ($stateProvider) {\n    $stateProvider.state('cliente.lista', {\n        url: \"/lista\",\n        templateUrl: 'cliente/lista.html',\n        controller: 'ClienteListaController'\n    }).state('cliente.novo', {\n        url: \"/novo\",\n        templateUrl: 'cliente/form.html',\n        controller: 'ClienteNovoController'\n    }).state('cliente.editar', {\n        url: \"/{id}\",\n        templateUrl: 'cliente/form.html',\n        controller: 'ClienteEditarController'\n    });\n}]).controller('ClienteListaController', ['$scope', 'seed', '$state', function ($scope, seed, $state) {\n    $scope.clientes = seed.clientes;\n    $scope.remover = function (index) {\n        $scope.clientes.splice(index, 1);\n    };\n    $scope.alterar = function (index) {\n        $state.go('cliente.editar', { id: index });\n    };\n}]).controller('ClienteNovoController', ['$scope', function ($scope) {\n    $scope.opts = ['MATÉRIA-PRIMA', 'REVENDA', 'MANUFATURA'];\n}]).controller('ClienteEditarController', ['$scope', function ($scope) {\n    $scope.opts = ['MATÉRIA-PRIMA', 'REVENDA', 'MANUFATURA'];\n}]);\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nangular.module('app.encomenda', ['ui.router', 'app.produto']).config(['$stateProvider', function ($stateProvider) {\n    $stateProvider.state('encomenda.lista', {\n        url: \"/lista\",\n        templateUrl: 'app/encomenda/lista.html',\n        controller: 'EncomendaListaController'\n    }).state('encomenda.novo', {\n        url: \"/novo\",\n        templateUrl: 'app/encomenda/form.html',\n        controller: 'EncomendaFormController',\n        resolve: {\n            entity: function entity() {\n                return {};\n            }\n        }\n    }).state('encomenda.editar', { // isso é um estado\n        url: \"/:id\", // isso  é uma rota\n        templateUrl: 'app/encomenda/form.html',\n        controller: 'EncomendaFormController',\n        resolve: {\n            entity: ['EncomendaService', '$stateParams', function (EncomendaService, $stateParams) {\n                return EncomendaService.getById($stateParams.id).then(function (data) {\n                    return data.data;\n                });\n            }]\n        }\n    });\n}]).controller('EncomendaListaController', ['$scope', '$state', 'EncomendaService', function ($scope, $state, EncomendaService) {\n    function getDados() {\n        EncomendaService.get().then(function (data) {\n            $scope.encomendas = data.data;\n        });\n    }\n    getDados();\n\n    $scope.remover = function (id) {\n        // tudo q esta no scopo esta no html\n        EncomendaService.remove(id).then(function (data) {\n            getDados();\n        });\n    };\n\n    $scope.alterar = function (id) {\n        console.log(id);\n        $state.go('encomenda.editar', { id: id });\n    };\n}]).controller('EncomendaFormController', ['$scope', '$state', 'EncomendaService', 'entity', 'ProdutoService', function ($scope, $state, EncomendaService, entity, ProdutoService) {\n    $scope.entity = entity;\n    $scope.entity.produtos = $scope.entity.produtos || [];\n    $scope.save = function (entity) {\n        if (entity._id == null) {\n            entity.dataSolicitacao = new Date();\n            entity.horaEntrega = $scope.horaEntrega.toString();\n            entity.dataEntrega = $scope.dataEntrega;\n            EncomendaService.save(entity).then(function (data) {\n                $state.go('encomenda.lista');\n            }, errorResponse);\n        } else {\n            alert(\"teste\");\n            entity.horaEntrega = $scope.horaEntrega.toString();\n            entity.dataEntrega = $scope.dataEntrega;\n            EncomendaService.update(entity).then(function (data) {\n                $state.go('encomenda.lista');\n            }, errorResponse);\n        }\n    };\n    function errorResponse(data) {\n        console.log(data);\n    }\n\n    $scope.remover = function (index) {\n        $scope.entity.produtos.splice(index, 1);\n    };\n\n    $scope.add = function (obj) {\n        $scope.entity.produtos.push(angular.copy(obj));\n        $scope.produto = {};\n    };\n\n    $scope.arrStatus = ['EM PRODUÇÃO', 'FINALIZADO', 'ENTREGUE'];\n\n    $scope.entity.status = $scope.entity.status || $scope.arrStatus[0];\n    $scope.horaEntrega = new Date($scope.entity.horaEntrega) || new Date();\n    $scope.entity.dataEntrega = new Date($scope.entity.dataEntrega) || new Date();\n    console.log($scope.entity);\n    if ($scope.entity.horaEntrega != null) {\n        $scope.horaEntrega = new Date($scope.entity.horaEntrega);\n    }\n    if ($scope.entity.dataEntrega != null) {\n        $scope.dataEntrega = new Date($scope.entity.dataEntrega);\n    }\n}]).service('EncomendaService', ['$http', function ($http) {\n    var url = 'http://localhost:8000/api/encomenda';\n    this.get = function (page, size) {\n        return $http.get(url);\n    };\n    this.getById = function (id) {\n        return $http.get(url + '/' + id);\n    };\n    this.save = function (entity) {\n        return $http.post(url, entity);\n    };\n    this.update = function (entity) {\n        return $http.put(url + '/' + entity._id, entity);\n    };\n    this.remove = function (id) {\n        return $http['delete'](url + '/' + id);\n    };\n}]);\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nangular.module('app.entrega', ['ui.router']).config(['$stateProvider', function ($stateProvider) {\n    $stateProvider.state('entrega.lista', {\n        url: \"/lista\",\n        templateUrl: 'entrega/lista.html',\n        controller: 'EntregaListaController'\n    }).state('entrega.edit', {\n        url: \"/{id}\",\n        templateUrl: 'entrega/form.html',\n        controller: 'EntregaEditarController'\n    });\n}]).controller('EntregaListaController', ['$scope', function ($scope) {\n    $scope.data = new Date();\n}]);\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nangular.module('app.funcionario', ['ui.router']).config([\"$stateProvider\", function ($stateProvider) {\n    $stateProvider.state('funcionario.lista', {\n        url: \"/lista\",\n        templateUrl: 'funcionario/lista.html',\n        controller: 'FuncionarioListaController'\n    }).state('funcionario.novo', {\n        url: \"/novo\",\n        templateUrl: 'funcionario/form.html',\n        controller: 'FuncionarioNovoController'\n    }).state('funcionario.entrada', {\n        url: \"/entrada\",\n        templateUrl: 'funcionario/entrada.html',\n        controller: 'FuncionarioEntradaController'\n    }).state('funcionario.editar', {\n        url: \"/{id}\",\n        templateUrl: 'funcionario/form.html',\n        controller: 'FuncionarioEditarController'\n    });\n}]).controller('FuncionarioListaController', ['$scope', 'seed', '$state', function ($scope, seed, $state) {\n    $scope.funcionarios = seed.funcionarios;\n    $scope.alterar = function (index) {\n        $state.go('funcionario.editar', { id: index });\n    };\n    $scope.remover = function (index) {\n        $scope.funcionarios.splice(index, 1);\n    };\n}]).controller('FuncionarioNovoController', ['$scope', function ($scope) {\n    $scope.opts = ['MATÉRIA-PRIMA', 'REVENDA', 'MANUFATURA'];\n}]).controller('FuncionarioEditarController', ['$scope', function ($scope) {\n    $scope.opts = ['MATÉRIA-PRIMA', 'REVENDA', 'MANUFATURA'];\n}]).controller('FuncionarioEntradaController', ['$scope', '$state', function ($scope, $state) {\n    $scope.opts = ['MATÉRIA-PRIMA', 'REVENDA', 'MANUFATURA'];\n    $scope.entrada = function () {\n        var data = new Date();\n        alert('Entrada ou saida em ' + data.getHours() + ':' + data.getMinutes());\n        $scope.login = '';\n        $scope.senha = '';\n    };\n}]);\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nangular.module('app.login', []);\n\n},{}],7:[function(require,module,exports){\n'use strict';\n\nangular.module('app.ordemProducao', ['ui.router']).config(['$stateProvider', function ($stateProvider) {\n    $stateProvider.state('ordemProducao.lista', {\n        url: \"/lista\",\n        templateUrl: 'app/ordemproducao/lista.html',\n        controller: 'ordemProducaoListaController'\n    }).state('ordemProducao.novo', {\n        url: \"/novo\",\n        templateUrl: 'app/ordemproducao/form.html',\n        controller: 'ordemProducaoFormController',\n        resolve: {\n            entity: function entity() {\n                return {};\n            }\n        }\n    }).state('ordemProducao.editar', { // isso é um estado\n        url: \"/:id\", // isso  é uma rota\n        templateUrl: 'app/ordemproducao/form.html',\n        controller: 'ordemProducaoFormController',\n        resolve: {\n            entity: ['ordemProducaoService', '$stateParams', function (ordemProducao, $stateParams) {\n                return ordemProducaoService.getById($stateParams.id).then(function (data) {\n                    return data.data;\n                });\n            }]\n        }\n    });\n}]).controller('ordemProducaoListaController', ['$scope', '$state', 'ordemProducaoService', function ($scope, $state, ordemProducaoService) {\n    function getDados() {\n        ordemProducaoService.get().then(function (data) {\n            $scope.ordensProducao = data.data;\n        });\n    }\n    getDados();\n\n    $scope.remover = function (id) {\n        // tudo q esta no scopo esta no html\n        ordemProducaoService.remove(id).then(function (data) {\n            getDados();\n        });\n    };\n\n    $scope.alterar = function (id) {\n        $state.go('ordemProducao.editar', { id: id });\n    };\n}]).controller('ordemProducaoFormController', ['$scope', '$state', 'ordemProducaoService', 'entity', 'ProdutoService', function ($scope, $state, ordemProducaoService, entity, ProdutoService) {\n    $scope.entity = entity;\n    $scope.entity.itemProducao = $scope.entity.itemProducao || [];\n\n    $scope.save = function (entity) {\n        if (entity._id == null) {\n            entity.dataPrazo = $scope.dataPrazo;\n            ordemProducaoService.save(entity).then(function (data) {\n                $state.go('ordemProducao.lista');\n            }, errorResponse);\n        } else {\n            entity.dataPrazo = $scope.dataPrazo;\n            ordemProducaoService.update(entity).then(function (data) {\n                $state.go('ordemProducao.lista');\n            }, errorResponse);\n        }\n    };\n    function errorResponse(data) {\n        console.log(data);\n    }\n\n    $scope.arrTipoOrdens = ['INTERNA', 'CLIENTE'];\n    $scope.entity.tipoOrdem = $scope.arrTipoOrdens[0];\n\n    $scope.entity.dataPrazo = new Date($scope.entity.dataPrazo) || new Date();\n    if ($scope.entity.dataPrazo != null) {\n        $scope.dataPrazo = new Date($scope.entity.dataPrazo);\n    }\n}]).service('ordemProducaoService', ['$http', function ($http) {\n    var url = window.location.origin + '/api/ordemproducao';\n    this.get = function (page, size) {\n        return $http.get(url);\n    };\n    this.getById = function (id) {\n        return $http.get(url + '/' + id);\n    };\n    this.save = function (entity) {\n        return $http.post(url, entity);\n    };\n    this.update = function (entity) {\n        return $http.put(url + '/' + entity._id, entity);\n    };\n    this.remove = function (id) {\n        return $http['delete'](url + '/' + id);\n    };\n}]);\n\n},{}],8:[function(require,module,exports){\n'use strict';\n\nangular.module('app.pedidoCompra', ['ui.router']).config(['$stateProvider', function ($stateProvider) {\n    $stateProvider.state('pedidoCompra.lista', {\n        url: \"/lista\",\n        templateUrl: 'app/pedidocompra/lista.html',\n        controller: 'pedidoCompraListaController'\n    }).state('pedidoCompra.novo', {\n        url: \"/novo\",\n        templateUrl: 'app/pedidocompra/form.html',\n        controller: 'pedidoCompraFormController',\n        resolve: {\n            entity: function entity() {\n                return {};\n            }\n        }\n    }).state('pedidoCompra.editar', { // isso é um estado\n        url: \"/:id\", // isso  é uma rota\n        templateUrl: 'app/pedidocompra/form.html',\n        controller: 'pedidoCompraFormController',\n        resolve: {\n            entity: ['pedidoCompraService', '$stateParams', function (pedidoCompraService, $stateParams) {\n                return pedidoCompraService.getById($stateParams.id).then(function (data) {\n                    return data.data;\n                });\n            }]\n        }\n    });\n}]).controller('pedidoCompraListaController', ['$scope', '$state', 'pedidoCompraService', function ($scope, $state, pedidoCompraService) {\n    function getDados() {\n        pedidoCompraService.get().then(function (data) {\n            $scope.pedidoCompras = data.data;\n        });\n    }\n    getDados();\n\n    $scope.remover = function (id) {\n        // tudo q esta no scopo esta no html\n        pedidoCompraService.remove(id).then(function (data) {\n            getDados();\n        });\n    };\n\n    $scope.alterar = function (id) {\n        console.log(id);\n        $state.go('pedidoCompra.editar', { id: id });\n    };\n}]).controller('pedidoCompraFormController', ['$scope', '$state', 'pedidoCompraService', 'entity', function ($scope, $state, pedidoCompraService, entity) {\n    $scope.entity = entity;\n    $scope.entity.itensPedido = $scope.entity.itensPedido || [];\n    $scope.save = function (entity) {\n        if (entity._id == null) {\n            entity.dataVencimento = $scope.dataVencimento;\n            pedidoCompraService.save(entity).then(function (data) {\n                $state.go('pedidoCompra.lista');\n            }, errorResponse);\n        } else {\n            entity.dataVencimento = $scope.dataVencimento;\n            pedidoCompraService.update(entity).then(function (data) {\n                $state.go('pedidoCompra.lista');\n            }, errorResponse);\n        }\n    };\n    function errorResponse(data) {\n        console.log(data);\n    }\n\n    $scope.remover = function (index) {\n        console.log($scope.entity.itensPedido);\n        $scope.entity.itensPedido.splice(index, 1);\n    };\n\n    $scope.add = function (obj) {\n        $scope.entity.itensPedido.push(angular.copy(obj));\n        $scope.itemPedidoCompra = {};\n    };\n\n    $scope.entity.dataVencimento = new Date($scope.entity.dataVencimento) || new Date();\n    if ($scope.entity.dataVencimento != null) {\n        $scope.dataVencimento = new Date($scope.entity.dataVencimento);\n    }\n}]).service('pedidoCompraService', ['$http', function ($http) {\n    var url = window.location.origin + '/api/pedidocompra';\n    this.get = function (page, size) {\n        return $http.get(url);\n    };\n    this.getById = function (id) {\n        return $http.get(url + '/' + id);\n    };\n    this.save = function (entity) {\n        return $http.post(url, entity);\n    };\n    this.update = function (entity) {\n        return $http.put(url + '/' + entity._id, entity);\n    };\n    this.remove = function (id) {\n        return $http['delete'](url + '/' + id);\n    };\n}]);\n\n},{}],9:[function(require,module,exports){\n'use strict';\nangular.module('app.produto', ['ui.router']).config(['$stateProvider', function ($stateProvider) {\n  $stateProvider.state('produto.lista', {\n    url: \"/lista\",\n    templateUrl: './app/produto/lista.html',\n    controller: 'ProdutoListaController'\n  }).state('produto.novo', {\n    url: \"/novo\",\n    templateUrl: './app/produto/form.html',\n    controller: 'ProdutoFormController',\n    resolve: {\n      entity: function entity() {\n        return {};\n      }\n    }\n  }).state('produto.emfalta', {\n    url: \"/falta\",\n    templateUrl: './app/produto/lista.html',\n    controller: 'ProdutoEmFaltaController'\n  }).state('produto.editar', {\n    url: \"/:id\",\n    templateUrl: 'app/produto/form.html',\n    controller: 'ProdutoFormController',\n    resolve: {\n      entity: ['ProdutoService', '$stateParams', function (ProdutoService, $stateParams) {\n        return ProdutoService.getId($stateParams.id).then(function (data) {\n          return data;\n        });\n      }]\n    }\n  });\n}]).service('ProdutoService', ['$http', function ($http) {\n  this.get = get;\n  this.getId = getId;\n  this.update = update;\n  this.save = save;\n\n  function get(page) {\n    return $http.get('/api/produto', page).then(function (data) {\n      return data.data;\n    });\n  }\n\n  function getId(id) {\n    return $http.get('/api/produto/' + id).then(function (data) {\n      return data.data;\n    });\n  }\n\n  function getByName(name) {\n    return $http.get('/api/produto/name', { params: { name: name } }).then(function (data) {\n      return data.data;\n    });\n  }\n\n  function update(val) {\n    return $http.put('/api/produto/' + val._id, val);\n  }\n\n  function save(val) {\n    console.log(val);\n    return $http.post('/api/produto', val);\n  }\n}]).controller('ProdutoListaController', ['$scope', '$state', 'ProdutoService', function ($scope, $state, ProdutoService) {\n  ProdutoService.get(0).then(function (data) {\n    $scope.list = data;\n  });\n\n  $scope.remover = function (value) {\n    $scope.valores.splice(value, 1);\n  };\n\n  $scope.alterar = function (value) {\n    $state.go('produto.editar', {\n      id: value._id\n    });\n  };\n}]).controller('ProdutoFormController', ['$scope', 'entity', '$state', 'ProdutoService', function ($scope, entity, $state, ProdutoService) {\n  $scope.entity = entity || {};\n  $scope.opts = ['MATERIA-PRIMA', 'REVENDA', 'MANUFATURADO'];\n  $scope.saveOrUpdate = saveOrUpdate;\n  console.log('oi');\n  function saveOrUpdate(val) {\n    var promise = undefined;\n    promise = val._id ? ProdutoService.update(val) : ProdutoService.save(val);\n    promise.then(function (data) {\n      if (data.status == 200) $state.go('produto.lista');\n    });\n  }\n}]).controller('ProdutoEmFaltaController', ['$scope', '$state', function ($scope, $state) {\n  $scope['in'] = true;\n  $scope.valores = [{\n    nome: 'Farinha Aviação',\n    tipo: 'MATERIA PRIMA',\n    valor: 12.50,\n    qntdMin: 3\n  }];\n  $scope.remover = function (index) {\n    $scope.valores.splice(index, 1);\n  };\n  $scope.alterar = function (index) {\n    $state.go('produto.editar', {\n      id: index\n    });\n  };\n}]);\n\n},{}],10:[function(require,module,exports){\n'use strict';\n\nangular.module('app.relatorio', ['ui.router']).config(['$stateProvider', function ($stateProvider) {\n    $stateProvider.state('relatorio.lista', {\n        url: \"/lista\",\n        templateUrl: 'relatorio/lista.html',\n        controller: 'RelatorioListaController'\n    });\n}]).controller('RelatorioListaController', ['$scope', function ($scope) {\n    $scope.options = ['Geral', 'Despesa', 'Lucro', 'Folha Salarial'];\n    $scope.select = 'Geral';\n    $scope.isAble = function () {\n        if ($scope.select == 'Folha Salarial') {\n            return $scope.inicio;\n        } else if ($scope.select != '') {\n            return $scope.inicio && $scope.fim;\n        }\n    };\n}]);\n\n},{}],11:[function(require,module,exports){\n'use strict';\nconsole.log('asdasdas');\nangular.module('app.usuario', ['ui.router']).config([\"$stateProvider\", function ($stateProvider) {\n    $stateProvider.state('usuario.lista', {\n        url: \"/lista\",\n        templateUrl: 'app/usuario/lista.html',\n        controller: 'UsuarioListaController'\n    }).state('usuario.novo', {\n        url: \"/novo\",\n        templateUrl: 'app/usuario/form.html',\n        controller: 'UsuarioFormController',\n        resolve: {\n            entity: function entity() {\n                return {};\n            }\n        }\n    }).state('usuario.editar', {\n        url: \"/{id}\",\n        templateUrl: 'app/usuario/form.html',\n        controller: 'UsuarioFormController',\n        resolve: {\n            entity: ['UsuarioService', '$stateParams', function (UsuarioService, $stateParams) {\n                return UsuarioService.getById($stateParams.id).then(function (data) {\n                    return data.data;\n                });\n            }]\n        }\n    });\n}]).controller('UsuarioListaController', ['$scope', '$state', 'UsuarioService', function ($scope, $state, UsuarioService) {\n    function getDados() {\n        UsuarioService.get().then(function (data) {\n            $scope.usuarios = data.data;\n        });\n    }\n    getDados();\n    $scope.remover = function (id) {\n        UsuarioService.remove(id).then(function (data) {\n            getDados();\n        });\n    };\n    $scope.alterar = function (index) {\n        $state.go('usuario.editar', { id: index });\n    };\n}]).controller('UsuarioFormController', ['$scope', 'UsuarioService', '$state', 'entity', function ($scope, UsuarioService, $state, entity) {\n    $scope.entity = entity;\n    $scope.tipos = ['VENDA', 'PRODUCAO', 'ENCOMENDA', 'ESTOQUE', 'ENTREGA', 'GERENCIA'];\n    $scope.save = function (entity) {\n        if (!entity._id) {\n            UsuarioService.save(entity).then(resolveSaveUpdate);\n        } else {\n            UsuarioService.update(entity).then(resolveSaveUpdate);\n        }\n    };\n    function resolveSaveUpdate() {\n        $state.go('usuario.lista');\n    }\n}]).service('UsuarioService', ['$http', function ($http) {\n    var url = 'http://localhost:8000/api/usuario';\n    this.get = function (page, size) {\n        return $http.get(url);\n    };\n    this.getById = function (id) {\n        return $http.get(url + '/' + id);\n    };\n    this.save = function (entity) {\n        return $http.post(url, entity);\n    };\n    this.update = function (entity) {\n        return $http.put(url + '/' + entity._id, entity);\n    };\n    this.remove = function (id) {\n        return $http['delete'](url + '/' + id);\n    };\n}]);\n\n},{}],12:[function(require,module,exports){\n'use strict';\nangular.module('app.venda', ['ui.router', 'ui.bootstrap']).config([\"$stateProvider\", function ($stateProvider) {\n  $stateProvider.state('venda.lista', {\n    url: \"/lista\",\n    templateUrl: 'venda/list.html',\n    controller: 'VendaController'\n  });\n}]).controller('VendaController', ['$scope', '$modal', function ($scope, $modal) {\n  $scope.sales = [];\n  $scope.getPrecos = function (v) {\n    return v.vendas.reduce(function (prev, next) {\n      return prev += next.number * next.product.value;\n    }, 0);\n  };\n\n  $scope.open = function () {\n    var modalInstance = $modal.open({\n      animation: true,\n      backdrop: false,\n      templateUrl: 'modaltemplate.html',\n      controller: 'ModalController',\n      size: 'md'\n    });\n    modalInstance.result.then(function (value) {\n      $scope.sales.push(value);\n    });\n  };\n}]).controller('ModalController', ['$scope', '$modalInstance', 'seed', function ($scope, $modalInstance, seed) {\n  $scope.products = seed.produtos;\n  $scope.clientes = seed.clientes;\n  $scope.addedProducts = [];\n  $scope.add = function (obj) {\n    $scope.addedProducts.push(angular.copy(obj));\n    $scope.sale.number = 0;\n    $scope.sale.item = $scope.products[0];\n  };\n\n  $scope.close = function (_boolean) {\n    if (_boolean) {\n      $modalInstance.close({\n        cliente: $scope.cliente,\n        vendas: $scope.addedProducts\n      });\n      return 0;\n    }\n    $modalInstance.dismiss();\n  };\n}]);\n\n},{}]},{},[1])\n\n","'use strict';\n\nangular.module('app.cliente', ['ui.router'])\n    .config([\"$stateProvider\", function ($stateProvider) {\n        $stateProvider\n            .state('cliente.lista', {\n                url: \"/lista\"\n                , templateUrl: 'cliente/lista.html'\n                ,controller:'ClienteListaController'\n            })\n            .state('cliente.novo', {\n                url: \"/novo\"\n                , templateUrl: 'cliente/form.html'\n                , controller: 'ClienteNovoController'\n            })\n            .state('cliente.editar', {\n                url: \"/{id}\"\n                , templateUrl: 'cliente/form.html'\n                , controller: 'ClienteEditarController'\n            });\n    }])\n    .controller('ClienteListaController', ['$scope','seed','$state',function ($scope,seed,$state) {\n      $scope.clientes = seed.clientes;\n        $scope.remover = function(index){\n            $scope.clientes.splice(index,1);\n        }\n        $scope.alterar = function(index){\n            $state.go('cliente.editar',{id:index})\n        }\n    }])\n    .controller('ClienteNovoController', ['$scope',function ($scope) {\n        $scope.opts = [\n            'MATÉRIA-PRIMA'\n            , 'REVENDA'\n            , 'MANUFATURA'\n        ]\n    }])\n    .controller('ClienteEditarController', ['$scope',function ($scope) {\n        $scope.opts = [\n            'MATÉRIA-PRIMA'\n            , 'REVENDA'\n            , 'MANUFATURA'\n        ]\n    }]);\n","'use strict';\n\nangular.module('app.encomenda', ['ui.router','app.produto'])\n    .config(['$stateProvider', function ($stateProvider) {\n        $stateProvider\n            .state('encomenda.lista', {\n                url: \"/lista\"\n                ,templateUrl: 'app/encomenda/lista.html'\n                ,controller:'EncomendaListaController'\n            })\n            .state('encomenda.novo', {\n                 url: \"/novo\",\n                 templateUrl: 'app/encomenda/form.html',\n                 controller: 'EncomendaFormController',\n                 resolve: {\n                   entity: function(){\n                     return {};\n                   }\n                 }\n            })\n            .state('encomenda.editar', { // isso é um estado\n                url: \"/:id\"// isso  é uma rota\n                , templateUrl: 'app/encomenda/form.html'\n                , controller: 'EncomendaFormController'\n                , resolve:  {\n                    entity:['EncomendaService','$stateParams',function(EncomendaService,$stateParams){\n                        return EncomendaService.getById($stateParams.id).then(function(data){\n                            return data.data;\n                        })\n                    }]\n                }\n            });\n    }])\n    .controller('EncomendaListaController', ['$scope','$state','EncomendaService',function ($scope,$state,EncomendaService) {\n        function getDados(){\n            EncomendaService.get().then(function(data){\n                $scope.encomendas = data.data;\n            })\n        }\n        getDados();\n\n        $scope.remover = function(id){// tudo q esta no scopo esta no html\n            EncomendaService.remove(id).then(function(data){\n                getDados();\n            })\n        }\n\n        $scope.alterar = function(id){\n          console.log(id);\n            $state.go('encomenda.editar',{id:id});\n        }\n    }])\n    .controller('EncomendaFormController', ['$scope','$state','EncomendaService','entity','ProdutoService',function ($scope,$state,EncomendaService, entity, ProdutoService) {\n        $scope.entity = entity;\n        $scope.entity.produtos = $scope.entity.produtos || [];\n        $scope.save = function(entity){\n            if(entity._id == null){\n                entity.dataSolicitacao = new Date();\n                entity.horaEntrega = $scope.horaEntrega.toString();\n                entity.dataEntrega = $scope.dataEntrega;\n                EncomendaService.save(entity).then(function(data){\n                    $state.go('encomenda.lista');\n                },errorResponse)\n            }else{\n                alert(\"teste\");\n                entity.horaEntrega = $scope.horaEntrega.toString();\n                entity.dataEntrega = $scope.dataEntrega;\n                EncomendaService.update(entity).then(function(data){\n                    $state.go('encomenda.lista');\n                },errorResponse)\n            }\n        }\n        function errorResponse(data){\n            console.log(data)\n        }\n\n        $scope.remover = function(index){\n            $scope.entity.produtos.splice(index,1);\n        }\n\n        $scope.add = function(obj){\n            $scope.entity.produtos.push(angular.copy(obj));\n            $scope.produto = {};\n        }\n\n\n\n        $scope.arrStatus = [\n            'EM PRODUÇÃO',\n            'FINALIZADO',\n            'ENTREGUE'\n        ];\n\n        $scope.entity.status = $scope.entity.status || $scope.arrStatus[0];\n        $scope.horaEntrega = new Date($scope.entity.horaEntrega) || new Date();\n        $scope.entity.dataEntrega = new Date($scope.entity.dataEntrega) || new Date();\n        console.log($scope.entity);\n        if($scope.entity.horaEntrega !=  null){\n            $scope.horaEntrega = new Date($scope.entity.horaEntrega);\n        }\n        if($scope.entity.dataEntrega !=  null){\n            $scope.dataEntrega = new Date($scope.entity.dataEntrega);\n        }\n      }])\n    .service('EncomendaService',['$http', function($http){\n        var url = 'http://localhost:8000/api/encomenda';\n        this.get = function(page, size){\n            return $http.get(url);\n        }\n        this.getById = function(id){\n            return $http.get(url+'/'+id);\n        }\n        this.save = function(entity){\n            return $http.post(url,entity);\n        }\n        this.update = function(entity){\n            return $http.put(url+'/'+entity._id,entity);\n        }\n        this.remove = function(id){\n            return $http.delete(url+'/'+id);\n        }\n    }]);\n","'use strict';\n\nangular.module('app.entrega', ['ui.router'])\n    .config(['$stateProvider', function ($stateProvider) {\n        $stateProvider\n            .state('entrega.lista', {\n                url: \"/lista\"\n                , templateUrl: 'entrega/lista.html'\n                ,controller:'EntregaListaController'\n            })\n            .state('entrega.edit', {\n                url: \"/{id}\"\n                , templateUrl: 'entrega/form.html'\n                ,controller:'EntregaEditarController'\n            })\n    }])\n    .controller('EntregaListaController', ['$scope',function ($scope) {\n        $scope.data = new Date();\n    }])\n","'use strict';\n\nangular.module('app.funcionario', ['ui.router'])\n    .config([\"$stateProvider\" ,function ($stateProvider) {\n        $stateProvider\n            .state('funcionario.lista', {\n                url: \"/lista\"\n                , templateUrl: 'funcionario/lista.html'\n                , controller: 'FuncionarioListaController'\n            })\n            .state('funcionario.novo', {\n                url: \"/novo\"\n                , templateUrl: 'funcionario/form.html'\n                , controller: 'FuncionarioNovoController'\n            })\n            .state('funcionario.entrada', {\n                url: \"/entrada\"\n                , templateUrl: 'funcionario/entrada.html'\n                , controller: 'FuncionarioEntradaController'\n            })\n            .state('funcionario.editar', {\n                url: \"/{id}\"\n                , templateUrl: 'funcionario/form.html'\n                , controller: 'FuncionarioEditarController'\n            });\n    }])\n    .controller('FuncionarioListaController', ['$scope', 'seed', '$state', function ($scope, seed, $state) {\n        $scope.funcionarios = seed.funcionarios;\n        $scope.alterar = function(index){\n            $state.go('funcionario.editar',{id:index});\n        }\n        $scope.remover = function(index){\n            $scope.funcionarios.splice(index,1);\n        }\n    }])\n    .controller('FuncionarioNovoController', ['$scope', function ($scope) {\n        $scope.opts = [\n            'MATÉRIA-PRIMA'\n            , 'REVENDA'\n            , 'MANUFATURA'\n        ]\n    }])\n    .controller('FuncionarioEditarController', ['$scope', function ($scope) {\n        $scope.opts = [\n            'MATÉRIA-PRIMA'\n            , 'REVENDA'\n            , 'MANUFATURA'\n        ]\n    }])\n    .controller('FuncionarioEntradaController', ['$scope','$state', function ($scope,$state) {\n        $scope.opts = [\n            'MATÉRIA-PRIMA'\n            , 'REVENDA'\n            , 'MANUFATURA'\n        ];\n        $scope.entrada = function(){\n            var data = new Date();\n            alert('Entrada ou saida em '+ data.getHours()+':'+data.getMinutes());\n            $scope.login = '';\n            $scope.senha = '';\n        }\n\n    }]);\n","'use strict';\n\nangular.module('app.login', [])\n","'use strict';\n\nangular.module('app.ordemProducao', ['ui.router'])\n    .config(['$stateProvider', function ($stateProvider) {\n        $stateProvider\n            .state('ordemProducao.lista', {\n                url: \"/lista\"\n                ,templateUrl: 'app/ordemproducao/lista.html'\n                ,controller:'ordemProducaoListaController'\n            })\n            .state('ordemProducao.novo', {\n                 url: \"/novo\",\n                 templateUrl: 'app/ordemproducao/form.html',\n                 controller: 'ordemProducaoFormController',\n                 resolve: {\n                   entity: function(){\n                     return {};\n                   }\n                 }\n            })\n            .state('ordemProducao.editar', { // isso é um estado\n                url: \"/:id\"// isso  é uma rota\n                , templateUrl: 'app/ordemproducao/form.html'\n                , controller: 'ordemProducaoFormController'\n                , resolve:  {\n                    entity:['ordemProducaoService','$stateParams',function(ordemProducao,$stateParams){\n                        return ordemProducaoService.getById($stateParams.id).then(function(data){\n                            return data.data;\n                        })\n                    }]\n                }\n            });\n    }])\n    .controller('ordemProducaoListaController', ['$scope','$state','ordemProducaoService',function ($scope,$state,ordemProducaoService) {\n        function getDados(){\n            ordemProducaoService.get().then(function(data){\n                $scope.ordensProducao = data.data;\n            })\n        }\n        getDados();\n\n        $scope.remover = function(id){// tudo q esta no scopo esta no html\n            ordemProducaoService.remove(id).then(function(data){\n                getDados();\n            })\n        }\n\n        $scope.alterar = function(id){\n            $state.go('ordemProducao.editar',{id:id});\n        }\n    }])\n    .controller('ordemProducaoFormController', ['$scope','$state','ordemProducaoService','entity','ProdutoService',function ($scope,$state,ordemProducaoService, entity, ProdutoService) {\n        $scope.entity = entity;\n        $scope.entity.itemProducao = $scope.entity.itemProducao || [];\n\n        $scope.save = function(entity){\n            if(entity._id == null){\n                entity.dataPrazo = $scope.dataPrazo;\n                ordemProducaoService.save(entity).then(function(data){\n                    $state.go('ordemProducao.lista');\n                },errorResponse)\n            }else{\n                entity.dataPrazo = $scope.dataPrazo;\n                ordemProducaoService.update(entity).then(function(data){\n                    $state.go('ordemProducao.lista');\n                },errorResponse)\n            }\n        }\n        function errorResponse(data){\n            console.log(data)\n        }\n\n        $scope.arrTipoOrdens = [\n            'INTERNA',\n            'CLIENTE'\n        ];\n        $scope.entity.tipoOrdem = $scope.arrTipoOrdens[0];\n\n        $scope.entity.dataPrazo = new Date($scope.entity.dataPrazo) || new Date();\n        if($scope.entity.dataPrazo !=  null){\n            $scope.dataPrazo = new Date($scope.entity.dataPrazo);\n        }\n      }])\n    .service('ordemProducaoService',['$http', function($http){\n        var url = window.location.origin+'/api/ordemproducao';\n        this.get = function(page, size){\n            return $http.get(url);\n        }\n        this.getById = function(id){\n            return $http.get(url+'/'+id);\n        }\n        this.save = function(entity){\n            return $http.post(url,entity);\n        }\n        this.update = function(entity){\n            return $http.put(url+'/'+entity._id,entity);\n        }\n        this.remove = function(id){\n            return $http.delete(url+'/'+id);\n        }\n    }]);\n","'use strict';\n\nangular.module('app.pedidoCompra', ['ui.router'])\n    .config(['$stateProvider', function ($stateProvider) {\n        $stateProvider\n            .state('pedidoCompra.lista', {\n                url: \"/lista\"\n                ,templateUrl: 'app/pedidocompra/lista.html'\n                ,controller:'pedidoCompraListaController'\n            })\n            .state('pedidoCompra.novo', {\n                 url: \"/novo\",\n                 templateUrl: 'app/pedidocompra/form.html',\n                 controller: 'pedidoCompraFormController',\n                 resolve: {\n                   entity: function(){\n                     return {};\n                   }\n                 }\n            })\n            .state('pedidoCompra.editar', { // isso é um estado\n                url: \"/:id\"// isso  é uma rota\n                , templateUrl: 'app/pedidocompra/form.html'\n                , controller: 'pedidoCompraFormController'\n                , resolve:  {\n                    entity:['pedidoCompraService','$stateParams',function(pedidoCompraService,$stateParams){\n                        return pedidoCompraService.getById($stateParams.id).then(function(data){\n                            return data.data;\n                        })\n                    }]\n                }\n            });\n    }])\n    .controller('pedidoCompraListaController', ['$scope','$state','pedidoCompraService',function ($scope,$state,pedidoCompraService) {\n        function getDados(){\n            pedidoCompraService.get().then(function(data){\n                $scope.pedidoCompras = data.data;\n            })\n        }\n        getDados();\n\n        $scope.remover = function(id){// tudo q esta no scopo esta no html\n            pedidoCompraService.remove(id).then(function(data){\n                getDados();\n            })\n        }\n\n        $scope.alterar = function(id){\n          console.log(id);\n            $state.go('pedidoCompra.editar',{id:id});\n        }\n    }])\n    .controller('pedidoCompraFormController', ['$scope','$state','pedidoCompraService','entity',function ($scope,$state,pedidoCompraService, entity) {\n        $scope.entity = entity;\n        $scope.entity.itensPedido = $scope.entity.itensPedido || [];\n        $scope.save = function(entity){\n            if(entity._id == null){\n                entity.dataVencimento = $scope.dataVencimento;\n                pedidoCompraService.save(entity).then(function(data){\n                    $state.go('pedidoCompra.lista');\n                },errorResponse)\n            }else{\n                entity.dataVencimento = $scope.dataVencimento;\n                pedidoCompraService.update(entity).then(function(data){\n                    $state.go('pedidoCompra.lista');\n                },errorResponse)\n            }\n        }\n        function errorResponse(data){\n            console.log(data)\n        }\n\n        $scope.remover = function(index){\n            console.log($scope.entity.itensPedido);\n            $scope.entity.itensPedido.splice(index,1);\n        }\n\n        $scope.add = function(obj){\n            $scope.entity.itensPedido.push(angular.copy(obj));\n            $scope.itemPedidoCompra = {};\n\n        }\n\n        $scope.entity.dataVencimento = new Date($scope.entity.dataVencimento) || new Date();\n        if($scope.entity.dataVencimento !=  null){\n            $scope.dataVencimento = new Date($scope.entity.dataVencimento);\n        }\n      }])\n    .service('pedidoCompraService',['$http', function($http){\n        var url = window.location.origin+'/api/pedidocompra';\n        this.get = function(page, size){\n            return $http.get(url);\n        }\n        this.getById = function(id){\n            return $http.get(url+'/'+id);\n        }\n        this.save = function(entity){\n            return $http.post(url,entity);\n        }\n        this.update = function(entity){\n            return $http.put(url+'/'+entity._id,entity);\n        }\n        this.remove = function(id){\n            return $http.delete(url+'/'+id);\n        }\n    }]);","'use strict';\nangular.module('app.produto', ['ui.router'])\n  .config(['$stateProvider', function($stateProvider) {\n    $stateProvider\n      .state('produto.lista', {\n        url: \"/lista\",\n        templateUrl: './app/produto/lista.html',\n        controller: 'ProdutoListaController'\n      })\n      .state('produto.novo', {\n        url: \"/novo\",\n        templateUrl: './app/produto/form.html',\n        controller: 'ProdutoFormController',\n         resolve: {\n           entity: function(){\n             return {};\n           }\n         }\n      })\n    .state('produto.emfalta', {\n        url: \"/falta\",\n        templateUrl: './app/produto/lista.html',\n        controller: 'ProdutoEmFaltaController'\n      })\n      .state('produto.editar', {\n        url: \"/:id\",\n        templateUrl: 'app/produto/form.html',\n        controller: 'ProdutoFormController',\n        resolve: {\n          entity: ['ProdutoService','$stateParams', function(ProdutoService, $stateParams){\n            return ProdutoService\n                    .getId($stateParams.id)\n                    .then(function(data){\n                      return data;\n                    })\n          }]\n        }\n      });\n  }])\n  .service('ProdutoService', ['$http', function($http){\n    this.get    = get;\n    this.getId  = getId;\n    this.update = update;\n    this.save   = save;\n\n    function get(page){\n        return $http.get('/api/produto', page).then(function(data){\n          return data.data;\n        });\n    }\n\n    function getId(id){\n      return $http.get('/api/produto/' + id).then(function(data){\n        return data.data;\n      });\n    }\n\n    function getByName(name){\n      return $http.get('/api/produto/name',{params:{name: name}}).then(function(data){\n        return data.data;\n      });\n    }\n\n    function update(val){\n      return $http.put('/api/produto/' + val._id, val);\n    }\n\n    function save(val){\n      console.log(val);\n      return $http.post('/api/produto', val);\n    }\n\n  }])\n  .controller('ProdutoListaController', ['$scope', '$state','ProdutoService', function($scope, $state, ProdutoService) {\n    ProdutoService\n      .get(0)\n      .then(data => {\n        $scope.list = data;\n      })\n\n    $scope.remover = function(value) {\n      $scope.valores.splice(value, 1);\n    }\n\n    $scope.alterar = function(value) {\n      $state.go('produto.editar', {\n        id: value._id\n      });\n    }\n  }])\n  .controller('ProdutoFormController', ['$scope','entity', '$state', 'ProdutoService', function($scope, entity, $state, ProdutoService) {\n    $scope.entity = entity || {};\n    $scope.opts = [ 'MATERIA-PRIMA', 'REVENDA', 'MANUFATURADO']\n    $scope.saveOrUpdate = saveOrUpdate;\n    console.log('oi');\n    function saveOrUpdate(val){\n      let promise;\n      promise = val._id ? ProdutoService.update(val) : ProdutoService.save(val);\n      promise.then(function(data){\n        if(data.status == 200) $state.go('produto.lista');\n      })\n    }\n  }])\n  .controller('ProdutoEmFaltaController', ['$scope', '$state', function($scope, $state) {\n    $scope.in = true;\n    $scope.valores = [{\n      nome: 'Farinha Aviação',\n      tipo: 'MATERIA PRIMA',\n      valor: 12.50,\n      qntdMin: 3\n    }]\n    $scope.remover = function(index) {\n      $scope.valores.splice(index, 1);\n    }\n    $scope.alterar = function(index) {\n      $state.go('produto.editar', {\n        id: index\n      });\n    }\n  }]);\n","'use strict';\n\nangular.module('app.relatorio', ['ui.router'])\n    .config(['$stateProvider',function ($stateProvider) {\n        $stateProvider\n            .state('relatorio.lista', {\n                url: \"/lista\"\n                , templateUrl: 'relatorio/lista.html'\n                ,controller:'RelatorioListaController'\n            })\n    }])\n    .controller('RelatorioListaController', ['$scope',function ($scope) {\n            $scope.options = [\n            'Geral',\n            'Despesa',\n            'Lucro',\n            'Folha Salarial'\n            ]\n            $scope.select = 'Geral';\n        $scope.isAble = function(){\n            if($scope.select == 'Folha Salarial'){\n                return $scope.inicio;\n            }else if($scope.select != ''){\n                return $scope.inicio && $scope.fim;\n            }\n        }\n    }])\n","'use strict';\nconsole.log('asdasdas')\nangular.module('app.usuario', ['ui.router'])\n    .config([\"$stateProvider\", function ($stateProvider) {\n        $stateProvider\n            .state('usuario.lista', {\n                url: \"/lista\"\n                , templateUrl: 'app/usuario/lista.html'\n                ,controller:'UsuarioListaController'\n            })\n            .state('usuario.novo', {\n                url: \"/novo\"\n                , templateUrl: 'app/usuario/form.html'\n                , controller: 'UsuarioFormController'\n                , resolve: {\n                    entity: function(){\n                        return {};\n                    }\n                }\n            })\n            .state('usuario.editar', {\n                url: \"/{id}\"\n                , templateUrl: 'app/usuario/form.html'\n                , controller: 'UsuarioFormController'\n                , resolve: {\n                    entity:['UsuarioService','$stateParams',function(UsuarioService,$stateParams){\n                        return UsuarioService.getById($stateParams.id).then(function(data){\n                            return data.data;\n                        })\n                    }]\n                }\n            });\n    }])\n    .controller('UsuarioListaController', ['$scope','$state','UsuarioService',function ($scope,$state,UsuarioService) {\n        function getDados(){\n            UsuarioService.get().then(function(data){\n                $scope.usuarios = data.data;\n            })\n        }\n        getDados();\n        $scope.remover = function(id){\n            UsuarioService.remove(id).then(function(data){\n                getDados();\n            })\n        }\n        $scope.alterar = function(index){\n            $state.go('usuario.editar',{id:index})\n        }\n    }])\n    .controller('UsuarioFormController', ['$scope','UsuarioService','$state', 'entity',function ($scope,UsuarioService,$state,entity) {\n        $scope.entity = entity;\n        $scope.tipos = [\n            'VENDA'\n            , 'PRODUCAO'\n            , 'ENCOMENDA'\n            , 'ESTOQUE'\n            , 'ENTREGA'\n            , 'GERENCIA'\n          ]\n        $scope.save = function(entity){\n            if(!entity._id){\n                UsuarioService.save(entity).then(resolveSaveUpdate)\n            }else{\n                UsuarioService.update(entity).then(resolveSaveUpdate)\n            }\n        }\n        function resolveSaveUpdate(){\n            $state.go('usuario.lista');\n        }\n    }])\n    .service('UsuarioService',['$http',function($http){\n        var url = 'http://localhost:8000/api/usuario';\n        this.get = function(page, size){\n            return $http.get(url);\n        }\n        this.getById = function(id){\n            return $http.get(url+'/'+id);\n        }\n        this.save = function(entity){\n            return $http.post(url,entity);\n        }\n        this.update = function(entity){\n            return $http.put(url+'/'+entity._id,entity);\n        }\n        this.remove = function(id){\n            return $http.delete(url+'/'+id);\n        }\n    }]);\n","'use strict';\nangular.module('app.venda', ['ui.router','ui.bootstrap'])\n    .config([\"$stateProvider\", function ($stateProvider) {\n        $stateProvider\n            .state('venda.lista', {\n                url: \"/lista\"\n                , templateUrl: 'venda/list.html'\n                ,controller:'VendaController'\n            })\n    }])\n    .controller('VendaController', ['$scope','$modal', function ($scope,$modal) {\n      $scope.sales = [];\n      $scope.getPrecos = function(v){\n        return v.vendas.reduce(function(prev,next){\n          return prev += (next.number * next.product.value);\n        },0)\n      }\n\n        $scope.open = function(){\n          var modalInstance = $modal.open({\n            animation: true,\n            backdrop: false,\n            templateUrl: 'modaltemplate.html',\n            controller: 'ModalController',\n            size: 'md'\n          })\n          modalInstance.result.then(function(value){\n            $scope.sales.push(value);\n          })\n        }\n    }])\n    .controller('ModalController',['$scope','$modalInstance','seed',function($scope,$modalInstance,seed){\n      $scope.products = seed.produtos;\n      $scope.clientes = seed.clientes;\n      $scope.addedProducts = [];\n      $scope.add = function(obj){\n        $scope.addedProducts.push(angular.copy(obj));\n        $scope.sale.number = 0;\n        $scope.sale.item = $scope.products[0];\n      }\n\n      $scope.close = function(_boolean){\n        if(_boolean){\n           $modalInstance.close({\n             cliente: $scope.cliente,\n             vendas: $scope.addedProducts\n           });\n           return 0;\n        }\n       $modalInstance.dismiss();\n      }\n    }])\n"],"sourceRoot":"/source/"}